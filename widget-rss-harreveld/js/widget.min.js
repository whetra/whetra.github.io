!function(t,e){function n(t,e,n){var i=t.children(),o=!1;t.empty();for(var r=0,a=i.length;a>r;r++){var l=i.eq(r);if(t.append(l),n&&t.append(n),s(t,e)){l.remove(),o=!0;break}n&&n.detach()}return o}function i(e,n,r,a,l){var c=!1,u="a, table, thead, tbody, tfoot, tr, col, colgroup, object, embed, param, ol, ul, dl, blockquote, select, optgroup, option, textarea, script, style",f="script, .dotdotdot-keep";return e.contents().detach().each(function(){var h=this,d=t(h);if("undefined"==typeof h)return!0;if(d.is(f))e.append(d);else{if(c)return!0;e.append(d),!l||d.is(a.after)||d.find(a.after).length||e[e.is(u)?"after":"append"](l),s(r,a)&&(c=3==h.nodeType?o(d,n,r,a,l):i(d,n,r,a,l)),c||l&&l.detach()}}),n.addClass("is-truncated"),c}function o(e,n,i,o,a){var u=e[0];if(!u)return!1;var h=c(u),d=-1!==h.indexOf(" ")?" ":"　",p="letter"==o.wrap?"":d,g=h.split(p),m=-1,y=-1,v=0,w=g.length-1;for(o.fallbackToLetter&&0==v&&0==w&&(p="",g=h.split(p),w=g.length-1);w>=v&&(0!=v||0!=w);){var S=Math.floor((v+w)/2);if(S==y)break;y=S,l(u,g.slice(0,y+1).join(p)+o.ellipsis),i.children().each(function(){t(this).toggle().toggle()}),s(i,o)?(w=y,o.fallbackToLetter&&0==v&&0==w&&(p="",g=g[0].split(p),m=-1,y=-1,v=0,w=g.length-1)):(m=y,v=y)}if(-1==m||1==g.length&&0==g[0].length){var R=e.parent();e.detach();var b=a&&a.closest(R).length?a.length:0;if(R.contents().length>b?u=f(R.contents().eq(-1-b),n):(u=f(R,n,!0),b||R.detach()),u&&(h=r(c(u),o),l(u,h),b&&a)){var T=a.parent();t(u).parent().append(a),t.trim(T.html())||T.remove()}}else h=r(g.slice(0,m+1).join(p),o),l(u,h);return!0}function s(t,e){return t.innerHeight()>e.maxHeight}function r(e,n){for(;t.inArray(e.slice(-1),n.lastCharacter.remove)>-1;)e=e.slice(0,-1);return t.inArray(e.slice(-1),n.lastCharacter.noEllipsis)<0&&(e+=n.ellipsis),e}function a(t){return{width:t.innerWidth(),height:t.innerHeight()}}function l(t,e){t.innerText?t.innerText=e:t.nodeValue?t.nodeValue=e:t.textContent&&(t.textContent=e)}function c(t){return t.innerText?t.innerText:t.nodeValue?t.nodeValue:t.textContent?t.textContent:""}function u(t){do t=t.previousSibling;while(t&&1!==t.nodeType&&3!==t.nodeType);return t}function f(e,n,i){var o,s=e&&e[0];if(s){if(!i){if(3===s.nodeType)return s;if(t.trim(e.text()))return f(e.contents().last(),n)}for(o=u(s);!o;){if(e=e.parent(),e.is(n)||!e.length)return!1;o=u(e[0])}if(o)return f(t(o),n)}return!1}function h(e,n){return e?"string"==typeof e?(e=t(e,n),e.length?e:!1):e.jquery?e:!1:!1}function d(t){for(var e=t.innerHeight(),n=["paddingTop","paddingBottom"],i=0,o=n.length;o>i;i++){var s=parseInt(t.css(n[i]),10);isNaN(s)&&(s=0),e-=s}return e}if(!t.fn.dotdotdot){t.fn.dotdotdot=function(e){if(0==this.length)return t.fn.dotdotdot.debug('No element found for "'+this.selector+'".'),this;if(this.length>1)return this.each(function(){t(this).dotdotdot(e)});var o=this,r=o.contents();o.data("dotdotdot")&&o.trigger("destroy.dot"),o.data("dotdotdot-style",o.attr("style")||""),o.css("word-wrap","break-word"),"nowrap"===o.css("white-space")&&o.css("white-space","normal"),o.bind_events=function(){return o.bind("update.dot",function(e,a){switch(o.removeClass("is-truncated"),e.preventDefault(),e.stopPropagation(),typeof l.height){case"number":l.maxHeight=l.height;break;case"function":l.maxHeight=l.height.call(o[0]);break;default:l.maxHeight=d(o)}l.maxHeight+=l.tolerance,"undefined"!=typeof a&&(("string"==typeof a||"nodeType"in a&&1===a.nodeType)&&(a=t("<div />").append(a).contents()),a instanceof t&&(r=a)),g=o.wrapInner('<div class="dotdotdot" />').children(),g.contents().detach().end().append(r.clone(!0)).find("br").replaceWith("  <br />  ").end().css({height:"auto",width:"auto",border:"none",padding:0,margin:0});var u=!1,f=!1;return c.afterElement&&(u=c.afterElement.clone(!0),u.show(),c.afterElement.detach()),s(g,l)&&(f="children"==l.wrap?n(g,l,u):i(g,o,g,l,u)),g.replaceWith(g.contents()),g=null,t.isFunction(l.callback)&&l.callback.call(o[0],f,r),c.isTruncated=f,f}).bind("isTruncated.dot",function(t,e){return t.preventDefault(),t.stopPropagation(),"function"==typeof e&&e.call(o[0],c.isTruncated),c.isTruncated}).bind("originalContent.dot",function(t,e){return t.preventDefault(),t.stopPropagation(),"function"==typeof e&&e.call(o[0],r),r}).bind("destroy.dot",function(t){t.preventDefault(),t.stopPropagation(),o.unwatch().unbind_events().contents().detach().end().append(r).attr("style",o.data("dotdotdot-style")||"").removeClass("is-truncated").data("dotdotdot",!1)}),o},o.unbind_events=function(){return o.unbind(".dot"),o},o.watch=function(){if(o.unwatch(),"window"==l.watch){var e=t(window),n=e.width(),i=e.height();e.bind("resize.dot"+c.dotId,function(){n==e.width()&&i==e.height()&&l.windowResizeFix||(n=e.width(),i=e.height(),f&&clearInterval(f),f=setTimeout(function(){o.trigger("update.dot")},100))})}else u=a(o),f=setInterval(function(){if(o.is(":visible")){var t=a(o);(u.width!=t.width||u.height!=t.height)&&(o.trigger("update.dot"),u=t)}},500);return o},o.unwatch=function(){return t(window).unbind("resize.dot"+c.dotId),f&&clearInterval(f),o};var l=t.extend(!0,{},t.fn.dotdotdot.defaults,e),c={},u={},f=null,g=null;return l.lastCharacter.remove instanceof Array||(l.lastCharacter.remove=t.fn.dotdotdot.defaultArrays.lastCharacter.remove),l.lastCharacter.noEllipsis instanceof Array||(l.lastCharacter.noEllipsis=t.fn.dotdotdot.defaultArrays.lastCharacter.noEllipsis),c.afterElement=h(l.after,o),c.isTruncated=!1,c.dotId=p++,o.data("dotdotdot",!0).bind_events().trigger("update.dot"),l.watch&&o.watch(),o},t.fn.dotdotdot.defaults={ellipsis:"... ",wrap:"word",fallbackToLetter:!0,lastCharacter:{},tolerance:0,callback:null,after:null,height:null,watch:!1,windowResizeFix:!0},t.fn.dotdotdot.defaultArrays={lastCharacter:{remove:[" ","　",",",";",".","!","?"],noEllipsis:[]}},t.fn.dotdotdot.debug=function(){};var p=1,g=t.fn.html;t.fn.html=function(n){return n!=e&&!t.isFunction(n)&&this.data("dotdotdot")?this.trigger("update",[n]):g.apply(this,arguments)};var m=t.fn.text;t.fn.text=function(n){return n!=e&&!t.isFunction(n)&&this.data("dotdotdot")?(n=t("<div />").text(n).html(),this.trigger("update",[n])):m.apply(this,arguments)}}}(jQuery),jQuery(document).ready(function(t){t(".dot-ellipsis").each(function(){var e=t(this).hasClass("dot-resize-update"),n=t(this).hasClass("dot-timer-update"),i=0,o=t(this).attr("class").split(/\s+/);t.each(o,function(t,e){var n=e.match(/^dot-height-(\d+)$/);null!==n&&(i=Number(n[1]))});var s=new Object;n&&(s.watch=!0),e&&(s.watch="window"),i>0&&(s.height=i),t(this).dotdotdot(s)})}),jQuery(window).on("load",function(){jQuery(".dot-ellipsis.dot-load-update").trigger("update.dot")}),function(){function t(t){return t.call.apply(t.bind,arguments)}function e(t,e){if(!t)throw Error();if(2<arguments.length){var n=Array.prototype.slice.call(arguments,2);return function(){var i=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(i,n),t.apply(e,i)}}return function(){return t.apply(e,arguments)}}function n(){return n=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?t:e,n.apply(null,arguments)}function i(t,e){this.a=t,this.o=e||t,this.c=this.o.document}function o(t,e,n,i){if(e=t.c.createElement(e),n)for(var o in n)n.hasOwnProperty(o)&&("style"==o?e.style.cssText=n[o]:e.setAttribute(o,n[o]));return i&&e.appendChild(t.c.createTextNode(i)),e}function s(t,e,n){t=t.c.getElementsByTagName(e)[0],t||(t=document.documentElement),t.insertBefore(n,t.lastChild)}function r(t){t.parentNode&&t.parentNode.removeChild(t)}function a(t,e,n){e=e||[],n=n||[];for(var i=t.className.split(/\s+/),o=0;o<e.length;o+=1){for(var s=!1,r=0;r<i.length;r+=1)if(e[o]===i[r]){s=!0;break}s||i.push(e[o])}for(e=[],o=0;o<i.length;o+=1){for(s=!1,r=0;r<n.length;r+=1)if(i[o]===n[r]){s=!0;break}s||e.push(i[o])}t.className=e.join(" ").replace(/\s+/g," ").replace(/^\s+|\s+$/,"")}function l(t,e){for(var n=t.className.split(/\s+/),i=0,o=n.length;o>i;i++)if(n[i]==e)return!0;return!1}function c(t){return t.o.location.hostname||t.a.location.hostname}function u(t,e,n){function i(){c&&r&&a&&(c(l),c=null)}e=o(t,"link",{rel:"stylesheet",href:e,media:"all"});var r=!1,a=!0,l=null,c=n||null;ee?(e.onload=function(){r=!0,i()},e.onerror=function(){r=!0,l=Error("Stylesheet failed to load"),i()}):setTimeout(function(){r=!0,i()},0),s(t,"head",e)}function f(t,e,n,i){var s=t.c.getElementsByTagName("head")[0];if(s){var r=o(t,"script",{src:e}),a=!1;return r.onload=r.onreadystatechange=function(){a||this.readyState&&"loaded"!=this.readyState&&"complete"!=this.readyState||(a=!0,n&&n(null),r.onload=r.onreadystatechange=null,"HEAD"==r.parentNode.tagName&&s.removeChild(r))},s.appendChild(r),setTimeout(function(){a||(a=!0,n&&n(Error("Script load timeout")))},i||5e3),r}return null}function h(){this.a=0,this.c=null}function d(t){return t.a++,function(){t.a--,g(t)}}function p(t,e){t.c=e,g(t)}function g(t){0==t.a&&t.c&&(t.c(),t.c=null)}function m(t){this.a=t||"-"}function y(t,e){this.c=t,this.f=4,this.a="n";var n=(e||"n4").match(/^([nio])([1-9])$/i);n&&(this.a=n[1],this.f=parseInt(n[2],10))}function v(t){return R(t)+" "+(t.f+"00")+" 300px "+w(t.c)}function w(t){var e=[];t=t.split(/,\s*/);for(var n=0;n<t.length;n++){var i=t[n].replace(/['"]/g,"");-1!=i.indexOf(" ")||/^\d/.test(i)?e.push("'"+i+"'"):e.push(i)}return e.join(",")}function S(t){return t.a+t.f}function R(t){var e="normal";return"o"===t.a?e="oblique":"i"===t.a&&(e="italic"),e}function b(t){var e=4,n="n",i=null;return t&&((i=t.match(/(normal|oblique|italic)/i))&&i[1]&&(n=i[1].substr(0,1).toLowerCase()),(i=t.match(/([1-9]00|normal|bold)/i))&&i[1]&&(/bold/i.test(i[1])?e=7:/[1-9]00/.test(i[1])&&(e=parseInt(i[1].substr(0,1),10)))),n+e}function T(t,e){this.c=t,this.f=t.o.document.documentElement,this.h=e,this.a=new m("-"),this.j=!1!==e.events,this.g=!1!==e.classes}function C(t){t.g&&a(t.f,[t.a.c("wf","loading")]),_(t,"loading")}function x(t){if(t.g){var e=l(t.f,t.a.c("wf","active")),n=[],i=[t.a.c("wf","loading")];e||n.push(t.a.c("wf","inactive")),a(t.f,n,i)}_(t,"inactive")}function _(t,e,n){t.j&&t.h[e]&&(n?t.h[e](n.c,S(n)):t.h[e]())}function I(){this.c={}}function V(t,e,n){var i,o=[];for(i in e)if(e.hasOwnProperty(i)){var s=t.c[i];s&&o.push(s(e[i],n))}return o}function E(t,e){this.c=t,this.f=e,this.a=o(this.c,"span",{"aria-hidden":"true"},this.f)}function k(t){s(t.c,"body",t.a)}function L(t){return"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:"+w(t.c)+";"+("font-style:"+R(t)+";font-weight:"+(t.f+"00")+";")}function O(t,e,n,i,o,s){this.g=t,this.j=e,this.a=i,this.c=n,this.f=o||3e3,this.h=s||void 0}function A(t,e,n,i,o,s,r){this.v=t,this.B=e,this.c=n,this.a=i,this.s=r||"BESbswy",this.f={},this.w=o||3e3,this.u=s||null,this.m=this.j=this.h=this.g=null,this.g=new E(this.c,this.s),this.h=new E(this.c,this.s),this.j=new E(this.c,this.s),this.m=new E(this.c,this.s),t=new y(this.a.c+",serif",S(this.a)),t=L(t),this.g.a.style.cssText=t,t=new y(this.a.c+",sans-serif",S(this.a)),t=L(t),this.h.a.style.cssText=t,t=new y("serif",S(this.a)),t=L(t),this.j.a.style.cssText=t,t=new y("sans-serif",S(this.a)),t=L(t),this.m.a.style.cssText=t,k(this.g),k(this.h),k(this.j),k(this.m)}function D(){if(null===ie){var t=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent);ie=!!t&&(536>parseInt(t[1],10)||536===parseInt(t[1],10)&&11>=parseInt(t[2],10))}return ie}function N(t,e,n){for(var i in ne)if(ne.hasOwnProperty(i)&&e===t.f[ne[i]]&&n===t.f[ne[i]])return!0;return!1}function P(t){var e,n=t.g.a.offsetWidth,i=t.h.a.offsetWidth;(e=n===t.f.serif&&i===t.f["sans-serif"])||(e=D()&&N(t,n,i)),e?te()-t.A>=t.w?D()&&N(t,n,i)&&(null===t.u||t.u.hasOwnProperty(t.a.c))?z(t,t.v):z(t,t.B):j(t):z(t,t.v)}function j(t){setTimeout(n(function(){P(this)},t),50)}function z(t,e){setTimeout(n(function(){r(this.g.a),r(this.h.a),r(this.j.a),r(this.m.a),e(this.a)},t),0)}function H(t,e,n){this.c=t,this.a=e,this.f=0,this.m=this.j=!1,this.s=n}function F(t){0==--t.f&&t.j&&(t.m?(t=t.a,t.g&&a(t.f,[t.a.c("wf","active")],[t.a.c("wf","loading"),t.a.c("wf","inactive")]),_(t,"active")):x(t.a))}function M(t){this.j=t,this.a=new I,this.h=0,this.f=this.g=!0}function $(t,e,i,o,s){var r=0==--t.h;(t.f||t.g)&&setTimeout(function(){var t=s||null,l=o||null||{};if(0===i.length&&r)x(e.a);else{e.f+=i.length,r&&(e.j=r);var c,u=[];for(c=0;c<i.length;c++){var f=i[c],h=l[f.c],d=e.a,p=f;if(d.g&&a(d.f,[d.a.c("wf",p.c,S(p).toString(),"loading")]),_(d,"fontloading",p),d=null,null===oe)if(window.FontFace){var p=/Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent),g=/OS X.*Version\/10\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);oe=p?42<parseInt(p[1],10):g?!1:!0}else oe=!1;d=oe?new O(n(e.g,e),n(e.h,e),e.c,f,e.s,h):new A(n(e.g,e),n(e.h,e),e.c,f,e.s,t,h),u.push(d)}for(c=0;c<u.length;c++)u[c].start()}},0)}function U(t,e,n){var i=[],o=n.timeout;C(e);var i=V(t.a,n,t.c),s=new H(t.c,e,o);for(t.h=i.length,e=0,n=i.length;n>e;e++)i[e].load(function(e,n,i){$(t,s,e,n,i)})}function W(t,e){this.c=t,this.a=e}function q(t,e){this.c=t,this.a=e}function B(t,e){this.c=t?t:se,this.a=[],this.f=[],this.g=e||""}function G(t,e){for(var n=e.length,i=0;n>i;i++){var o=e[i].split(":");3==o.length&&t.f.push(o.pop());var s="";2==o.length&&""!=o[1]&&(s=":"),t.a.push(o.join(s))}}function J(t){if(0==t.a.length)throw Error("No fonts to load!");if(-1!=t.c.indexOf("kit="))return t.c;for(var e=t.a.length,n=[],i=0;e>i;i++)n.push(t.a[i].replace(/ /g,"+"));return e=t.c+"?family="+n.join("%7C"),0<t.f.length&&(e+="&subset="+t.f.join(",")),0<t.g.length&&(e+="&text="+encodeURIComponent(t.g)),e}function Q(t){this.f=t,this.a=[],this.c={}}function K(t){for(var e=t.f.length,n=0;e>n;n++){var i=t.f[n].split(":"),o=i[0].replace(/\+/g," "),s=["n4"];if(2<=i.length){var r,a=i[1];if(r=[],a)for(var a=a.split(","),l=a.length,c=0;l>c;c++){var u;if(u=a[c],u.match(/^[\w-]+$/)){var f=ce.exec(u.toLowerCase());if(null==f)u="";else{if(u=f[2],u=null==u||""==u?"n":le[u],f=f[1],null==f||""==f)f="4";else var h=ae[f],f=h?h:isNaN(f)?"4":f.substr(0,1);u=[u,f].join("")}}else u="";u&&r.push(u)}0<r.length&&(s=r),3==i.length&&(i=i[2],r=[],i=i?i.split(","):r,0<i.length&&(i=re[i[0]])&&(t.c[o]=i))}for(t.c[o]||(i=re[o])&&(t.c[o]=i),i=0;i<s.length;i+=1)t.a.push(new y(o,s[i]))}}function X(t,e){this.c=t,this.a=e}function Y(t,e){this.c=t,this.a=e}function Z(t,e){this.c=t,this.f=e,this.a=[]}var te=Date.now||function(){return+new Date},ee=!!window.FontFace;m.prototype.c=function(){for(var t=[],e=0;e<arguments.length;e++)t.push(arguments[e].replace(/[\W_]+/g,"").toLowerCase());return t.join(this.a)},O.prototype.start=function(){var t=this.c.o.document,e=this,n=te(),i=new Promise(function(i,o){function s(){te()-n>=e.f?o():t.fonts.load(v(e.a),e.h).then(function(t){1<=t.length?i():setTimeout(s,25)},function(){o()})}s()}),o=null,s=new Promise(function(t,n){o=setTimeout(n,e.f)});Promise.race([s,i]).then(function(){o&&(clearTimeout(o),o=null),e.g(e.a)},function(){e.j(e.a)})};var ne={D:"serif",C:"sans-serif"},ie=null;A.prototype.start=function(){this.f.serif=this.j.a.offsetWidth,this.f["sans-serif"]=this.m.a.offsetWidth,this.A=te(),P(this)};var oe=null;H.prototype.g=function(t){var e=this.a;e.g&&a(e.f,[e.a.c("wf",t.c,S(t).toString(),"active")],[e.a.c("wf",t.c,S(t).toString(),"loading"),e.a.c("wf",t.c,S(t).toString(),"inactive")]),_(e,"fontactive",t),this.m=!0,F(this)},H.prototype.h=function(t){var e=this.a;if(e.g){var n=l(e.f,e.a.c("wf",t.c,S(t).toString(),"active")),i=[],o=[e.a.c("wf",t.c,S(t).toString(),"loading")];n||i.push(e.a.c("wf",t.c,S(t).toString(),"inactive")),a(e.f,i,o)}_(e,"fontinactive",t),F(this)},M.prototype.load=function(t){this.c=new i(this.j,t.context||this.j),this.g=!1!==t.events,this.f=!1!==t.classes,U(this,new T(this.c,t),t)},W.prototype.load=function(t){function e(){if(s["__mti_fntLst"+i]){var n,o=s["__mti_fntLst"+i](),r=[];if(o)for(var a=0;a<o.length;a++){var l=o[a].fontfamily;void 0!=o[a].fontStyle&&void 0!=o[a].fontWeight?(n=o[a].fontStyle+o[a].fontWeight,r.push(new y(l,n))):r.push(new y(l))}t(r)}else setTimeout(function(){e()},50)}var n=this,i=n.a.projectId,o=n.a.version;if(i){var s=n.c.o;f(this.c,(n.a.api||"https://fast.fonts.net/jsapi")+"/"+i+".js"+(o?"?v="+o:""),function(o){o?t([]):(s["__MonotypeConfiguration__"+i]=function(){return n.a},e())}).id="__MonotypeAPIScript__"+i}else t([])},q.prototype.load=function(t){var e,n,i=this.a.urls||[],o=this.a.families||[],s=this.a.testStrings||{},r=new h;for(e=0,n=i.length;n>e;e++)u(this.c,i[e],d(r));var a=[];for(e=0,n=o.length;n>e;e++)if(i=o[e].split(":"),i[1])for(var l=i[1].split(","),c=0;c<l.length;c+=1)a.push(new y(i[0],l[c]));else a.push(new y(i[0]));p(r,function(){t(a,s)})};var se="https://fonts.googleapis.com/css",re={latin:"BESbswy","latin-ext":"çöüğş",cyrillic:"йяЖ",greek:"αβΣ",khmer:"កខគ",Hanuman:"កខគ"},ae={thin:"1",extralight:"2","extra-light":"2",ultralight:"2","ultra-light":"2",light:"3",regular:"4",book:"4",medium:"5","semi-bold":"6",semibold:"6","demi-bold":"6",demibold:"6",bold:"7","extra-bold":"8",extrabold:"8","ultra-bold":"8",ultrabold:"8",black:"9",heavy:"9",l:"3",r:"4",b:"7"},le={i:"i",italic:"i",n:"n",normal:"n"},ce=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/,ue={Arimo:!0,Cousine:!0,Tinos:!0};X.prototype.load=function(t){var e=new h,n=this.c,i=new B(this.a.api,this.a.text),o=this.a.families;G(i,o);var s=new Q(o);K(s),u(n,J(i),d(e)),p(e,function(){t(s.a,s.c,ue)})},Y.prototype.load=function(t){var e=this.a.id,n=this.c.o;e?f(this.c,(this.a.api||"https://use.typekit.net")+"/"+e+".js",function(e){if(e)t([]);else if(n.Typekit&&n.Typekit.config&&n.Typekit.config.fn){e=n.Typekit.config.fn;for(var i=[],o=0;o<e.length;o+=2)for(var s=e[o],r=e[o+1],a=0;a<r.length;a++)i.push(new y(s,r[a]));try{n.Typekit.load({events:!1,classes:!1,async:!0})}catch(l){}t(i)}},2e3):t([])},Z.prototype.load=function(t){var e=this.f.id,n=this.c.o,i=this;e?(n.__webfontfontdeckmodule__||(n.__webfontfontdeckmodule__={}),n.__webfontfontdeckmodule__[e]=function(e,n){for(var o=0,s=n.fonts.length;s>o;++o){var r=n.fonts[o];i.a.push(new y(r.name,b("font-weight:"+r.weight+";font-style:"+r.style)))}t(i.a)},f(this.c,(this.f.api||"https://f.fontdeck.com/s/css/js/")+c(this.c)+"/"+e+".js",function(e){e&&t([])})):t([])};var fe=new M(window);fe.a.c.custom=function(t,e){return new q(e,t)},fe.a.c.fontdeck=function(t,e){return new Z(e,t)},fe.a.c.monotype=function(t,e){return new W(e,t)},fe.a.c.typekit=function(t,e){return new Y(e,t)},fe.a.c.google=function(t,e){return new X(e,t)};var he={load:n(fe.load,fe)};"function"==typeof define&&define.amd?define(function(){return he}):"undefined"!=typeof module&&module.exports?module.exports=he:(window.WebFont=he,window.WebFontConfig&&fe.load(window.WebFontConfig))}(),function(t,e,n,i){"use strict";function o(e,n){this.element=e,this.page=t(e).find(".page"),this.options=t.extend({},r,n),this._defaults=r,this._name=s,this.isLoading=!0,this.draggable=null,this.tween=null,this.calculateProgress=null,this.init()}var s="autoScroll",r={by:"continuous",speed:"medium",duration:10,pause:5,click:!1,minimumMovement:3};o.prototype={init:function(){function e(){s.tween.pause(),TweenLite.killDelayedCallsTo(s.calculateProgress),TweenLite.killDelayedCallsTo(r),TweenLite.killDelayedCallsTo(a)}var n,o,s=this,r=null,a=null,l=t(this.element).outerHeight(!0),c=l,u=this.element.scrollHeight-this.element.offsetHeight;this.calculateProgress=function(){c=t(s.element).scrollTop()+l,s.tween.progress(t(s.element).scrollTop()/u).play()},this.canScroll()?("page"===this.options.by?(n="fastest"===this.options.speed?.4:"fast"===this.options.speed?.8:"medium"===this.options.speed?1.2:"slow"===this.options.speed?1.6:2,o=this.page.outerHeight(!0)/t(this.element).outerHeight(!0)*n):(n="fastest"===this.options.speed?60:"fast"===this.options.speed?50:"medium"===this.options.speed?40:"slow"===this.options.speed?30:20,o=Math.abs((this.page.outerHeight(!0)-t(this.element).outerHeight(!0))/n)),Draggable.create(this.element,{type:"scrollTop",throwProps:!0,edgeResistance:.75,minimumMovement:s.options.minimumMovement,onPress:function(){e()},onRelease:function(){"none"!==s.options.by&&TweenLite.delayedCall(s.options.pause,s.calculateProgress)},onClick:function(){s.options.click&&(e(),t(s.element).trigger("scrollClick",[this.pointerEvent]))}}),this.draggable=Draggable.get(this.element),this.tween=TweenLite.to(this.draggable.scrollProxy,o,{scrollTop:u,ease:Linear.easeNone,delay:"page"===this.options.by?this.options.duration:this.options.pause,paused:!0,onUpdate:"page"===this.options.by?function(){Math.abs(s.draggable.scrollProxy.top())>=c&&(s.tween.pause(),c+=l,TweenLite.delayedCall(s.options.duration,a=function(){s.tween.resume()}))}:i,onComplete:function(){TweenLite.delayedCall("page"===s.options.by?s.options.duration:s.options.pause,r=function(){TweenLite.to(s.page,1,{autoAlpha:0,onComplete:function(){s.tween.seek(0).pause(),"page"===s.options.by&&(c=l),t(s.element).trigger("done")}})})}}),TweenLite.set(this.element,{overflowY:"hidden"})):this.options.click&&(Draggable.create(this.element,{type:"scrollTop",throwProps:!0,edgeResistance:.95,minimumMovement:this.options.minimumMovement,onClick:function(){t(s.element).trigger("scrollClick",[this.pointerEvent])}}),this.draggable=Draggable.get(this.element))},canScroll:function(){return this.options&&this.page.height()>t(this.element).height()},destroy:function(){t(this.element).removeData(),this.tween&&this.tween.kill(),this.draggable&&this.draggable.kill(),this.element=null,this.page=null,this.options=null,this._defaults=null,this.draggable=null,this.tween=null,this.calculateProgress=null}},o.prototype.play=function(){this.canScroll()&&"none"!==this.options.by&&this.tween&&(this.isLoading?(this.tween.play(),this.isLoading=!1):(TweenLite.to(this.page,1,{autoAlpha:1}),TweenLite.delayedCall("page"===this.options.by?this.options.duration:this.options.pause,this.calculateProgress)))},o.prototype.pause=function(){this.tween&&(TweenLite.killDelayedCallsTo(this.calculateProgress),this.tween.pause())},o.prototype.stop=function(){this.tween&&(TweenLite.killDelayedCallsTo(this.calculateProgress),this.tween.kill()),this.element=null,this.page=null},t.fn.autoScroll=function(e){return this.each(function(){t.data(this,"plugin_"+s)||t.data(this,"plugin_"+s,new o(this,e))})}}(jQuery,window,document);var WIDGET_COMMON_CONFIG={AUTH_PATH_URL:"v1/widget/auth",LOGGER_CLIENT_ID:"1088527147109-6q1o2vtihn34292pjt4ckhmhck0rk0o7.apps.googleusercontent.com",LOGGER_CLIENT_SECRET:"nlZyrcPLg6oEwO9f9Wfn29Wh",LOGGER_REFRESH_TOKEN:"1/xzt4kwzE1H7W9VnKB8cAaCx6zb4Es4nKEoqaYHdTD15IgOrJDtdun6zK6XiATCKT",STORE_URL:"https://store-dot-rvaserver2.appspot.com/"},RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Utilities=function(){function t(t,e){var n="font-family: "+decodeURIComponent(e.font.family).replace(/'/g,"")+"; ",i="color: "+(e.color?e.color:e.forecolor)+"; ",o="font-size: "+(-1===e.size.indexOf("px")?e.size+"px; ":e.size+"; "),s="font-weight: "+(e.bold?"bold":"normal")+"; ",r="font-style: "+(e.italic?"italic":"normal")+"; ",a="text-decoration: "+(e.underline?"underline":"none")+"; ",l="background-color: "+(e.highlightColor?e.highlightColor:e.backcolor)+";";return"."+t+" {"+n+i+o+s+r+a+l+"}"}function e(t){for(var e=document.createElement("style"),n=0,i=t.length;i>n;n++)e.appendChild(document.createTextNode(t[n]));document.head.appendChild(e)}function n(n,s){function r(){s&&"function"==typeof s&&s()}function a(){r()}var l=null,c=[],u=[],f=[];if(!n||0===n.length)return r(),void 0;n.forEach(function(n){n.class&&n.fontStyle&&e([t(n.class,n.fontStyle)])});for(var h=0;h<n.length;h++)n[h].fontStyle&&n[h].fontStyle.font.type&&"google"===n[h].fontStyle.font.type&&(l=n[h].fontStyle.font.family.split(",")[0],l=l.replace(/'/g,""),c.push(l));for(h=0;h<n.length;h++)n[h].fontStyle&&n[h].fontStyle.font.type&&"custom"===n[h].fontStyle.font.type&&(u.push(decodeURIComponent(n[h].fontStyle.font.family).replace(/'/g,"")),f.push(n[h].fontStyle.font.url.replace(/'/g,"\\'")));if(0===c.length&&0===u.length)r();else{for(var d=0;d<u.length;d+=1)i(u[d],f[d]);c.length>0?o(c,a):r()}}function i(t,e,n){var i=null,o="font-family: "+t+"; src: url('"+e+"');";n=n||document,i=n.styleSheets[0],null!==i&&i.addRule("@font-face",o)}function o(t,e){WebFont.load({google:{families:t},active:function(){e&&"function"==typeof e&&e()},inactive:function(){e&&"function"==typeof e&&e()},timeout:5e3})}function s(t){var e=document.createElement("script");e.src=t,document.body.appendChild(e)}function r(t){for(var e=t.length,n=[],i=0;e>i;i++)n[i]=new Image,n[i].src=t[i]}function a(t){return l(t,window.location.search.substring(1))}function l(t,e){for(var n,i=e.split("&"),o=0;o<i.length;o++)if(n=i[o].split("="),n[0]==t)return decodeURIComponent(n[1]);return""}function c(t){var e=/(\d{4})\.(\d{2})\.(\d{2})\.(\d{2})\.(\d{2})/,n=e.exec(t);return n?new Date(+n[1],+n[2]-1,+n[3],+n[4],+n[5]):void 0}function u(t){var e="";switch(t){case 404:e="The file does not exist or cannot be accessed.";break;case 507:e="There is not enough disk space to save the file on Rise Cache.";break;default:e="There was a problem retrieving the file from Rise Cache."}return e}function f(t){var e=document.createElement("div");return e.innerHTML=t,e.textContent}function h(t,e){var n=new XMLHttpRequest;if(t&&e&&"function"==typeof e){n.open("HEAD",t+"?cb="+(new Date).getTime(),!1);try{n.send(),e(n.status>=200&&n.status<304)}catch(i){e(!1)}}}function d(){var t=25,e=navigator.userAgent.match(/Chrome\/(\S+)/),n=e?e[1]:0;return n&&(n=parseInt(n.substring(0,n.indexOf("."))),t>=n)?!0:!1}function p(t,e){return/^(?:f|ht)tps?\:\/\//.test(t)||(t=(e?"https://":"http://")+t),t}return{addProtocol:p,getQueryParameter:a,getQueryStringParameter:l,getFontCssStyle:t,addCSSRules:e,loadFonts:n,loadCustomFont:i,loadGoogleFonts:o,loadScript:s,preloadImages:r,getRiseCacheErrorMessage:u,unescapeHTML:f,hasInternetConnection:h,isLegacy:d,getDateObjectFromPlayerVersionString:c}}();var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Scroller=function(t){"use strict";function e(){i(),c(),C>V?(_=!0,S.width=V,n()):S.width=C,i(),c()}function n(){var t=new Event("scroller-oversized-canvas");v.dispatchEvent(t)}function i(){C=0;for(var t=0;t<T.length;t++)T[t].separator?o(T[t]):s(T[t])}function o(t){var e=S.height/2,n=t.size/2;R.save(),R.fillStyle=t.color,R.beginPath(),R.arc(C+n,e,n,0,2*Math.PI),R.fill(),C+=t.size+10,R.restore()}function s(t,e){var n,i={};t&&(i.text=I.unescapeHTML(t.text),t.fontStyle&&(n=t.fontStyle,n.font&&n.font.family&&(i.font=n.font.family),n.size&&(i.size=n.size),n.forecolor&&(i.foreColor=n.forecolor),n.bold&&(i.bold=n.bold),n.italic&&(i.italic=n.italic),n.backcolor&&e&&(i.backcolor=n.backcolor)),e?a(i):r(i))}function r(t){var e="";R.save(),t.bold&&(e="bold "),t.italic&&(e+="italic "),t.size&&(e+=t.size+" "),t.font&&(e+=t.font),R.font=e,R.fillStyle=t.foreColor,R.textBaseline="middle",R.translate(0,S.height/2),R.fillText(t.text,C,0),C+=R.measureText(t.text).width+10,R.restore()}function a(t){var e,n,i="";R.save(),t.bold&&(i="bold "),t.italic&&(i+="italic "),t.size&&(i+=t.size+" "),t.font&&(i+=t.font),R.font=i,R.textBaseline="middle",e=R.measureText("  ...  ").width,n=t.size?t.size.indexOf("px")>0?parseInt(t.size.slice(0,t.size.indexOf("px")),10):t.size:10,R.translate(0,S.height/2),R.fillStyle="transparent"===t.backcolor?"#FFF":t.backcolor,R.fillRect(V-e,-(n/2),e,n),R.fillStyle=t.foreColor,R.fillText("  ...  ",V-e,0),R.restore()}function l(){w.clearRect(0,0,v.width,v.height),w.drawImage(S,w.xpos,0)}function c(){var t=0,e=0,n=0;if(x=_?V:C,T.length>0){for(;t<v.width;)T[n].separator?o(T[n]):s(T[n]),t=C-x,e=n,n=e===T.length-1?0:e+1;_&&s(T[e],!0)}}function u(){var e;if(t.transition&&t.transition.speed)switch(t.transition.speed){case"slow":e=100;break;case"medium":e=150;break;case"fast":e=200;break;default:e=150}return x/e}function f(){b=null,w.xpos=0,v.dispatchEvent(new CustomEvent("done",{bubbles:!0}))}function h(){S=document.createElement("canvas"),S.id="secondary",S.style.display="none",R=d(S),document.body.appendChild(S)}function d(e){var n=e.getContext("2d");return e.width=t.width,e.height=t.height,n.xpos=0,n}function p(t){T=t,v=document.getElementById("scroller"),w=d(v),h(),e(),TweenLite.ticker.addEventListener("tick",l),v.dispatchEvent(new CustomEvent("ready",{bubbles:!0}))}function g(t){T=t,_=!1,e()}function m(){b||(b=TweenLite.to(w,u(),{xpos:-x,ease:Linear.easeNone,onComplete:f})),b.play()}function y(){b&&b.pause()}var v=null,w=null,S=null,R=null,b=null,T=[],C=0,x=0,_=!1,I=RiseVision.Common.Utilities,V=32767;return{init:p,play:m,pause:y,refresh:g}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.LoggerUtils=function(){"use strict";function t(t,e){var i=null;t.event?(i=t,i.file_url&&(i.file_format=t.file_format||n(i.file_url)),i.company_id=c,i.display_id=l,u&&(i.version=u),e(i)):e(i)}function e(){var t=new Date,e=t.getUTCFullYear(),n=t.getUTCMonth()+1,i=t.getUTCDate();return 10>n&&(n="0"+n),10>i&&(i="0"+i),""+e+n+i}function n(t){var e,n=/[?#&]/;return t&&"string"==typeof t?(e=t.substr(t.lastIndexOf(".")+1),n.test(e)&&(e=e.substr(0,-1!==e.indexOf("?")?e.indexOf("?"):e.length),e=e.substr(0,-1!==e.indexOf("#")?e.indexOf("#"):e.length),e=e.substr(0,-1!==e.indexOf("&")?e.indexOf("&"):e.length)),e.toLowerCase()):null}function i(t){var n={kind:"bigquery#tableDataInsertAllRequest",skipInvalidRows:!1,ignoreUnknownValues:!1,templateSuffix:e(),rows:[{insertId:""}]},i=JSON.parse(JSON.stringify(n));return i.rows[0].insertId=Math.random().toString(36).substr(2).toUpperCase(),i.rows[0].json=JSON.parse(JSON.stringify(t)),i.rows[0].json.ts=(new Date).toISOString(),i}function o(e,n){t(n,function(t){null!==t&&RiseVision.Common.Logger.log(e,t)})}function s(t,n){try{top.postToPlayer({message:"widget-log",table:t,params:JSON.stringify(n),suffix:e()})}catch(i){console.log("widget-common.logEventToPlayer",i)}}function r(t,e){c=t,l=e}function a(t){u=t}var l="",c="",u=null;return{getInsertData:i,getFileFormat:n,logEvent:o,logEventToPlayer:s,setIds:r,setVersion:a}}(),RiseVision.Common.Logger=function(t){"use strict";function e(t){var e=new XMLHttpRequest;return new Date-c<358e4?t({}):(e.open("POST",o,!0),e.onloadend=function(){var n={};try{n=JSON.parse(e.response)}catch(i){console.warn("Can't refresh logger token - ",i.message)}t({token:n.access_token,refreshedAt:new Date})},e.send(),void 0)}function n(t){return r&&l===t}function i(i,o){function f(e){var n,r,a=new XMLHttpRequest;r=s.replace("TABLE_ID",i),c=e.refreshedAt||c,u=e.token||u,n=t.getInsertData(o),a.open("POST",r,!0),a.setRequestHeader("Content-Type","application/json"),a.setRequestHeader("Authorization","Bearer "+u),o.cb&&"function"==typeof o.cb&&(a.onloadend=function(){o.cb(a.response)}),a.send(JSON.stringify(n))}if(!(!i||!o||o.hasOwnProperty("event")&&!o.event||o.hasOwnProperty("event")&&n(o.event))&&o.display_id&&"preview"!==o.display_id&&"display_id"!==o.display_id&&"displayId"!==o.display_id){try{if(top.postToPlayer&&top.enableWidgetLogging)return t.logEventToPlayer(i,o)}catch(h){console.log("widget-common: logger",h)}return r=!0,l=o.event,setTimeout(function(){r=!1},a),e(f)}}var o="https://www.googleapis.com/oauth2/v3/token?client_id="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_ID+"&client_secret="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_SECRET+"&refresh_token="+WIDGET_COMMON_CONFIG.LOGGER_REFRESH_TOKEN+"&grant_type=refresh_token",s="https://www.googleapis.com/bigquery/v2/projects/client-side-events/datasets/Widget_Events/tables/TABLE_ID/insertAll",r=!1,a=1e3,l="",c=0,u="";return{log:i}}(RiseVision.Common.LoggerUtils);var RiseVision=RiseVision||{};RiseVision.RSS={},RiseVision.RSS=function(t,e){"use strict";function n(){e.rpc.call("","rsevent_ready",null,V.getString("id"),!0,!0,!0,!0,!0)}function i(){e.rpc.call("","rsevent_done",null,V.getString("id"))}function o(){var t=p()?"horizontal":I.layout,e={layout:t,layoutUrl:"custom"===t?I.layoutUrl:null};
y({event:"configuration",event_details:JSON.stringify(e),feed_url:I.url})}function s(){var t={event:"warning",event_details:"no feed items",feed_url:I.url};y(t),C("There are no items to show from this RSS feed.")}function r(){clearTimeout(D),D=null}function a(){r(),D=setTimeout(function(){i()},5e3)}function l(){E=new RiseVision.Common.Message(t.getElementById("container"),t.getElementById("messageContainer")),E.show("Please wait while your feed is loaded.")}function c(t){var e=[{"class":"story_font-style",fontStyle:I.story.fontStyle}];I.headline&&!_.isEmpty(I.headline.fontStyle)&&e.push({"class":"headline_font-style",fontStyle:I.headline.fontStyle}),I.timestamp&&!_.isEmpty(I.timestamp.fontStyle)&&e.push({"class":"timestamp_font-style",fontStyle:I.timestamp.fontStyle}),I.author&&!_.isEmpty(I.author.fontStyle)&&e.push({"class":"author_font-style",fontStyle:I.author.fontStyle}),t&&"function"==typeof t?RiseVision.Common.Utilities.loadFonts(e,t):RiseVision.Common.Utilities.loadFonts(e)}function u(){k=new RiseVision.RSS.RiseRSS(I),k.init()}function f(){var t=window.location.pathname,e=t.lastIndexOf("/")+1;t=t.substr(0,e)+"layouts/","undefined"==typeof I.layout?t+="layout-4x1.html":"custom"===I.layout?t=I.layoutUrl:t+=I.layout+".html",$.get(t).done(function(t){h(t)}).fail(function(){d(t)})}function h(t){$("#container").append(t),l(),c(),u(),n()}function d(e){E=new RiseVision.Common.Message(t.getElementById("container"),t.getElementById("messageContainer")),E.show("The layout file could not be loaded."),y({event:"error",event_details:"layout not loaded",error_details:e,feed_url:I.url}),n()}function p(){return I.transition?"scroll"===I.transition.type&&"left"===I.transition.direction?!0:!1:!1}function g(){t.getElementById("scroller").style.display="block",l(),c(function(){u(),n()})}function m(){return"rss_events"}function y(t){RiseVision.Common.LoggerUtils.logEvent(m(),t)}function v(){i()}function w(t){L=new RiseVision.RSS.Content(V,I),t.items&&t.items.length>0?(E.hide(),O=_.clone(t),L.init(O),A||L.play()):s()}function S(t){var e,n=!1;if(t.items&&0!==t.items.length)if(O&&t.items.length===O.items.length){for(e=0;e<O.items.length;e+=1)if(!_.isEqual(t.items[e],O.items[e])){n=!0;break}}else n=!0;else s();n&&(O=_.clone(t),N?(L||(L=new RiseVision.RSS.Content(V,I)),E.hide(),L.init(O),N=!1):L.update(t))}function R(){return A=!0,N?(r(),void 0):(L&&L.pause(),void 0)}function b(){return A=!1,N?(a(),void 0):(L&&L.play(),void 0)}function T(n){I=JSON.parse(JSON.stringify(n)),V=new e.Prefs,I.width=V.getInt("rsW"),I.height=V.getInt("rsH"),t.getElementById("container").style.width=I.width+"px",t.getElementById("container").style.height=I.height+"px",o(),p()?g():f()}function C(t){N=!0,L||(L=new RiseVision.RSS.Content(V,I)),L.reset(),O=null,E.show(t),A||a()}function x(){R()}var I=null,V=new e.Prefs,E=null,k=null,L=null,O=null,A=!0,D=null,N=!1;return{getTableName:m,logEvent:y,onContentDone:v,onRiseRSSInit:w,onRiseRSSRefresh:S,pause:R,play:b,setAdditionalParams:T,showError:C,stop:x}}(document,gadgets);var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.Utils=function(){"use strict";function t(t){var e,n,i=document.createElement("div");for(i.innerHTML=t,e=i.getElementsByTagName("script"),n=e.length;n--;)e[n].parentNode.removeChild(e[n]);return i.innerHTML}function e(t,e){var n=e?e:120;return t.length>n&&(t=t.substring(0,n),t=t.replace(/\w+$/,""),t+=" ..."),t}return{stripScripts:t,truncate:e}}();var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.Images={},RiseVision.RSS.Images=function(){"use strict";function t(t){a.push(t),r+=1,r===s.length&&l&&"function"==typeof l&&l()}function e(e){var n=new Image;n.onload=function(){t(this)},n.onerror=function(){t(this)},n.src=e}function n(){var n;for(n=0;n<s.length;n+=1)null===s[n]?t(null):e(s[n])}function i(t,e){t.length>0?(s=t,a=[],r=0,e&&(l=e),n()):e&&"function"==typeof e&&e()}function o(){return a}var s=[],r=0,a=[],l=null;return{getImages:o,load:i}}();var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.RiseRSS=function(t){"use strict";function e(){var e=document.querySelector("rise-rss");e.addEventListener("rise-rss-response",function(t){t.detail&&t.detail.feed&&(n?(n=!1,RiseVision.RSS.onRiseRSSInit(t.detail.feed)):RiseVision.RSS.onRiseRSSRefresh(t.detail.feed))}),e.addEventListener("rise-rss-error",function(e){var n="",i={event:"error",feed_url:t.url};e.detail&&"string"==typeof e.detail?n=e.detail:e.detail&&Array.isArray(e.detail)&&e.detail.length>0&&(n=e.detail[0]),i.error_details=n,i.event_details="rise rss error","401 unauthorized"===n.toLowerCase()?(i.event_details="feed authentication error",RiseVision.RSS.showError("The feed at the URL provided cannot be shown because it is protected and requires authentication.")):"404 not found"===n.toLowerCase()?(i.event_details="feed not found",RiseVision.RSS.showError("The feed URL <span class='error-link'>"+t.url+"</span> could not be found.")):"not a feed"===n.toLowerCase()?RiseVision.RSS.showError("The URL provided is not an RSS feed."):n.indexOf("403")>0&&n.toLowerCase().indexOf("forbidden")>0?(i.event_details="feed request error",RiseVision.RSS.showError("Sorry, there was a problem requesting the RSS feed, please contact the owner of the RSS feed to resolve.")):RiseVision.RSS.showError("Sorry, there was a problem with the RSS feed."),RiseVision.RSS.logEvent(i)}),e.setAttribute("url",t.url),t.itemsInQueue&&e.setAttribute("entries",t.itemsInQueue),e.go()}var n=!0;return{init:e}};var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.TransitionNoScroll=function(t,e){"use strict";function n(e){var n={};return e+t.itemsToShow>=g.length-1?(n.itemsToShow=g.length-(e+1),n.currentItemIndex=g.length-1):(n.itemsToShow=t.itemsToShow,n.currentItemIndex=e+t.itemsToShow),n}function i(){var e={};return g.length<=t.itemsToShow?(e.itemsToShow=g.length,e.currentItemIndex=g.length-1):(e.itemsToShow=t.itemsToShow,e.currentItemIndex=t.itemsToShow-1),e}function o(t){$(".page").empty(),t&&"function"==typeof t&&t()}function s(e){"fade"===t.transition.type?($(".item").one("webkitTransitionEnd transitionend",function(){o(e)}),$(".item").addClass("fade-out").removeClass("fade-in")):o(e)}function r(n){e.showItem(n),"fade"===t.transition.type&&$(".item").addClass("fade-in"),$(".item").removeClass("hide")}function a(){var t,o,a=i(),l=n(m);return m===g.length-1?(c(),s(function(){for(o=0;o<a.itemsToShow;o+=1)r(o);m=a.currentItemIndex,RiseVision.RSS.onContentDone()}),v=!1,void 0):(v?(v=!1,e.loadImages(function(){s(function(){for(o=0;o<a.itemsToShow;o+=1)r(o);m=a.currentItemIndex})})):(t=m+1,m=l.currentItemIndex,s(function(){for(o=t;o<t+l.itemsToShow;o+=1)r(o)})),void 0)}function l(){var e=t.transition.duration/1e3>=1?t.transition.duration:1e3*t.transition.duration;null===y&&(y=setInterval(function(){a()},e))}function c(){clearInterval(y),y=null}function u(t){var e,n;for(g=t,e=i(),m=e.currentItemIndex,n=0;n<e.itemsToShow;n+=1)r(n);w&&(w=!1,h())}function f(){s(),w=!1,v=!1,g=[]}function h(){g.length>0?l():w=!0}function d(){w=!1,c()}function p(t){g=t,v=!0}var g=[],m=0,y=null,v=!1,w=!1;return{init:u,reset:f,start:h,stop:d,update:p}};var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.TransitionVerticalScroll=function(t,e){"use strict";function n(){$(".page").empty()}function i(){var t=$("#container");return"undefined"!=typeof t.data("plugin_autoScroll")?t.data("plugin_autoScroll"):null}function o(){var t=i();t&&($("#container").autoScroll().off("done",a),t.destroy(),$(".page").css("visibility","inherit"),$(".page").css("opacity","1"))}function s(){var t;for(t=0;t<p.length;t+=1)e.showItem(t);$(".item").removeClass("hide")}function r(){var e;e=void 0===t.transition.pud||t.transition.pud<1?1e4:1e3*t.transition.pud,y||(y=setTimeout(function(){y=null,a()},e))}function a(){g?(g=!1,o(),e.loadImages(function(){n(),s(),l(),RiseVision.RSS.onContentDone()})):RiseVision.RSS.onContentDone()}function l(){var e=$("#container");e.autoScroll({by:"scroll"===t.transition.type?"continuous":"page",speed:t.transition.speed,duration:t.transition.duration,pause:t.transition.resume}).on("done",a)}function c(t){p=t,s(),l(),m&&(m=!1,f())}function u(){o(),n(),m=!1,p=[]}function f(){var t=i();p.length>0?t&&t.canScroll()?t.play():r():m=!0}function h(){var t=i();m=!1,t&&t.canScroll()&&t.pause(),y&&(clearTimeout(y),y=null)}function d(t){p=t,g=!0}var p=[],g=!1,m=!1,y=null;return{init:c,reset:u,start:f,stop:h,update:d}};var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.HorizontalScroll=function(t,e){"use strict";function n(){var e=document.querySelector("#scroller");g=new RiseVision.Common.Scroller(t),e.addEventListener("scroller-oversized-canvas",function(){RiseVision.RSS.logEvent({event:"warning",event_details:"canvas width is over the max size",feed_url:t.url})}),e.addEventListener("ready",o),e.addEventListener("done",s),g.init(i())}function i(){var n,i="",o="",s="",r="",a=null,l=[],c=t.separator&&t.separator.show;for(n=0;n<f.length;n++)i=e.getTitle(f[n]),o=e.getAuthor(f[n]),s=e.getDate(f[n]),r=e.getStory(f[n]),i&&("undefined"==typeof t.dataSelection.showTitle||t.dataSelection.showTitle)&&(a={},a.text=i,a.fontStyle=t.headline.fontStyle,l.push(a)),o&&("undefined"==typeof t.dataSelection.showAuthor||t.dataSelection.showAuthor)&&(a={},a.text=o,a.fontStyle=t.author.fontStyle,l.push(a)),s&&("undefined"==typeof t.dataSelection.showTimestamp||t.dataSelection.showTimestamp)&&(a={},a.text=s,a.fontStyle=t.timestamp.fontStyle,l.push(a)),r&&(a={},a.text=r,a.fontStyle=t.story.fontStyle,l.push(a)),c&&(a={},a.separator=!0,a.size=t.separator.size,a.color=t.separator.color,l.push(a));return l}function o(){p=!0,l()}function s(){h&&(h=!1,g.refresh(i())),RiseVision.RSS.onContentDone()}function r(t){document.getElementById("container").style.display="none",f=t,n(),d&&(d=!1,l())}function a(){d=!1,f=[]}function l(){g&&p&&f.length>0?g.play():d=!0}function c(){d=!1,g&&g.pause()}function u(t){f=t,h=!0}var f=[],h=!1,d=!1,p=!1,g=null;return{init:r,reset:a,start:l,stop:c,update:u}};var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.Content=function(t,e){"use strict";function n(){var t=R.length<=e.itemsToShow?R.length:e.itemsToShow;return e.separator&&e.separator.show?e.height/t-e.separator.size:e.height/t}function i(t){var e=null;return _.has(t,"enclosures")&&t.enclosures[0]&&_.contains(x,t.enclosures[0].type)?e=t.enclosures[0].url:t.image&&t.image.url&&(e=t.image.url),e}function o(){var t,e=[];for(t=0;t<R.length;t+=1)e.push(i(R[t]));return e}function s(t,n){var i,o,s,r=null,a=parseInt(t.css("margin-left"),10)+parseInt(t.css("margin-right"),10),l=parseInt(t.css("margin-top"),10)+parseInt(t.css("margin-bottom"),10);switch(e.layout){case"layout-4x1":r={},r.width=.33*e.width,r.height=e.height/e.itemsToShow-l;break;case"layout-2x1":r={},r.width=0===$(n).find(".story").length?e.width-a:.5*e.width,r.height=e.height/e.itemsToShow-$(n).find(".textWrapper").outerHeight(!0)-l;break;case"layout-16x9":r={},r.width=e.width-a,r.height=e.height/e.itemsToShow-l;break;case"layout-1x2":r={},r.width=e.width-a,r.height=(e.height/e.itemsToShow-l)/2;break;case"layout-photo":case"layout-photo_dark":r={},t.width()<t.height()?(r.width=t.width(),r.height=t.height()):(r.width=e.width-a,r.height=e.height/e.itemsToShow-l);break;case"layout-poster":}return r&&(i=r.width/parseInt(t.width()),o=r.height/parseInt(t.height()),s=o>i?i:o,r.width=parseInt(parseInt(t.width())*s),r.height=parseInt(parseInt(t.height())*s)),r}function r(t,n){var o,s,r,a=p(t),l=d(t),c=f(t),u=i(t),g=h(t),m=document.querySelector("#layout").content,y=$(m.cloneNode(!0)),v=!1;return!t.title||"undefined"!=typeof e.dataSelection.showTitle&&!e.dataSelection.showTitle?y.find(".headline").remove():(y.find(".headline").css("textAlign",e.headline.fontStyle.align),y.find(".headline a").html(a).text()),!g||"undefined"!=typeof e.dataSelection.showTimestamp&&!e.dataSelection.showTimestamp?(v=!0,y.find(".timestamp").remove()):(e.timestamp&&y.find(".timestamp").css("textAlign",e.timestamp.fontStyle.align),y.find(".timestamp").text(g)),!c||"undefined"!=typeof e.dataSelection.showAuthor&&!e.dataSelection.showAuthor?(v=!0,y.find(".author").remove()):(e.author&&y.find(".author").css("textAlign",e.author.fontStyle.align),y.find(".author").text(c)),v&&y.find(".separator").remove(),!u||"undefined"!=typeof e.dataSelection.showImage&&!e.dataSelection.showImage?y.find(".image").remove():(r=T.getImages()[n],r&&y.find(".image").attr("src",u)),l?(o=y.find(".story"),o.css("textAlign",e.story.fontStyle.align),o.html(l),o.find("p").addClass("story_font-style"),o.find("div").addClass("story_font-style"),o.find("span").addClass("story_font-style")):y.remove(".story"),s=$(document.importNode(y[0],!0))}function a(){$(".item").each(function(){var t=$(this).find(".image"),e=null;t&&(e=s(t,this),e&&(t.width(e.width),t.height(e.height)))})}function l(t){$(".page").append(r(R[t],t)),a(),e.separator&&e.separator.show&&$(".item").css("border-bottom","solid "+e.separator.size+"px "+e.separator.color),c()===!0&&($(".item").height(n()),"layout-16x9"!==e.layout&&$(".item").dotdotdot({height:n()}))}function c(){switch(e.layout){case"layout-photo":case"layout-photo_dark":case"layout-poster":return!1;default:return!0}}function u(t){R=t.items,C||(e.transition||(e.transition={type:"none",duration:10,direction:"up"}),"none"===e.transition.type||"fade"===e.transition.type?C=new RiseVision.RSS.TransitionNoScroll(e,this):"scroll"===e.transition.type?"up"===e.transition.direction?C=new RiseVision.RSS.TransitionVerticalScroll(e,this):"left"===e.transition.direction&&(C=new RiseVision.RSS.HorizontalScroll(e,this)):"page"===e.transition.type&&(C=new RiseVision.RSS.TransitionVerticalScroll(e,this))),g(function(){C.init(R)})}function f(t){var e=null;return t.author?e=t.author:_.has(t,"dc:creator")&&(e=t["dc:creator"]["#"]),e}function h(t){var e,n=t.date,i=null;return n&&(n=new Date(n),e={year:"numeric",month:"long",day:"numeric"},i=n.toLocaleDateString("en-us",e)),i}function d(t){var n=null;return _.has(t,"description")&&("full"===e.dataSelection.showDescription?n=b.stripScripts(t.description):"snippet"===e.dataSelection.showDescription&&e.dataSelection.snippetLength>0&&(n=b.truncate($("<div/>").html(b.stripScripts(t.description)).text(),e.dataSelection.snippetLength))),n}function p(t){var e=null;return t.title&&(e=b.stripScripts(t.title)),e}function g(t){T.load(o(),function(){t&&"function"==typeof t&&t()})}function m(){C&&C.stop()}function y(){C&&C.start()}function v(){C&&(C.stop(),C.reset()),R=[]}function w(t){l(t)}function S(t){R=t.items,C&&C.update(R)}var R=[],b=RiseVision.RSS.Utils,T=RiseVision.RSS.Images,C=null,x=["image/bmp","image/gif","image/jpeg","image/jpg","image/png","image/tiff"];return{init:u,getAuthor:f,getDate:h,getStory:d,getTitle:p,loadImages:g,pause:m,play:y,reset:v,showItem:w,update:S}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(t,e){"use strict";function n(){try{e.style.height=t.style.height}catch(n){console.warn("Can't initialize Message - ",n.message)}}function i(){if(s){for(;e.firstChild;)e.removeChild(e.firstChild);e.style.display="none",t.style.display="block",s=!1}}function o(n){var i,o=document.createDocumentFragment();s?(i=e.querySelector(".message"),i.innerHTML=n):(t.style.display="none",e.style.display="block",i=document.createElement("p"),i.innerHTML=n,i.setAttribute("class","message"),o.appendChild(i),e.appendChild(o),s=!0)}var s=!1;return n(),{hide:i,show:o}},function(t,e,n){"use strict";function i(t,e){var n,i="",o="";Array.isArray(t)&&t.length>0&&Array.isArray(e)&&e.length>0&&("companyId"===t[0]&&(i=e[0]),"displayId"===t[1]&&(o=e[1]?e[1]:"preview"),RiseVision.Common.LoggerUtils.setIds(i,o),"additionalParams"===t[2]&&(n=JSON.parse(e[2]),RiseVision.RSS.setAdditionalParams(n)))}function o(){RiseVision.RSS.play()}function s(){RiseVision.RSS.pause()}function r(){RiseVision.RSS.stop()}function a(){t.removeEventListener("WebComponentsReady",a),c&&""!==c&&(n.rpc.register("rscmd_play_"+c,o),n.rpc.register("rscmd_pause_"+c,s),n.rpc.register("rscmd_stop_"+c,r),n.rpc.register("rsparam_set_"+c,i),n.rpc.call("","rsparam_get",null,c,["companyId","displayId","additionalParams"]))}var l=new n.Prefs,c=l.getString("id");t.oncontextmenu=function(){return!1},e.body.onmousedown=function(){return!1},t.addEventListener("WebComponentsReady",a)}(window,document,gadgets);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
