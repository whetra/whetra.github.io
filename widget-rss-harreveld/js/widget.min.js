!function(v,e){if(!v.fn.dotdotdot){v.fn.dotdotdot=function(t){if(0==this.length)return v.fn.dotdotdot.debug('No element found for "'+this.selector+'".'),this;if(1<this.length)return this.each(function(){v(this).dotdotdot(t)});var o=this,s=o.contents();o.data("dotdotdot")&&o.trigger("destroy.dot"),o.data("dotdotdot-style",o.attr("style")||""),o.css("word-wrap","break-word"),"nowrap"===o.css("white-space")&&o.css("white-space","normal"),o.bind_events=function(){return o.bind("update.dot",function(t,e){switch(o.removeClass("is-truncated"),t.preventDefault(),t.stopPropagation(),typeof r.height){case"number":r.maxHeight=r.height;break;case"function":r.maxHeight=r.height.call(o[0]);break;default:r.maxHeight=function(t){for(var e=t.innerHeight(),n=["paddingTop","paddingBottom"],i=0,o=n.length;i<o;i++){var s=parseInt(t.css(n[i]),10);isNaN(s)&&(s=0),e-=s}return e}(o)}r.maxHeight+=r.tolerance,void 0!==e&&(("string"==typeof e||"nodeType"in e&&1===e.nodeType)&&(e=v("<div />").append(e).contents()),e instanceof v&&(s=e)),(c=o.wrapInner('<div class="dotdotdot" />').children()).contents().detach().end().append(s.clone(!0)).find("br").replaceWith("  <br />  ").end().css({height:"auto",width:"auto",border:"none",padding:0,margin:0});var n=!1,i=!1;return a.afterElement&&((n=a.afterElement.clone(!0)).show(),a.afterElement.detach()),w(c,r)&&(i="children"==r.wrap?function(t,e,n){var i=t.children(),o=!1;t.empty();for(var s=0,r=i.length;s<r;s++){var a=i.eq(s);if(t.append(a),n&&t.append(n),w(t,e)){a.remove(),o=!0;break}n&&n.detach()}return o}(c,r,n):function e(n,i,o,s,r){var a=!1;n.contents().detach().each(function(){var t=v(this);if(void 0===this)return!0;if(t.is("script, .dotdotdot-keep"))n.append(t);else{if(a)return!0;n.append(t),!r||t.is(s.after)||t.find(s.after).length||n[n.is("a, table, thead, tbody, tfoot, tr, col, colgroup, object, embed, param, ol, ul, dl, blockquote, select, optgroup, option, textarea, script, style")?"after":"append"](r),w(o,s)&&(a=3==this.nodeType?function(t,e,n,i,o){var s=t[0];if(!s)return!1;var r=b(s),a=-1!==r.indexOf(" ")?" ":"　",l="letter"==i.wrap?"":a,c=r.split(l),u=-1,h=-1,f=0,d=c.length-1;i.fallbackToLetter&&0==f&&0==d&&(l="",c=r.split(l),d=c.length-1);for(;f<=d&&(0!=f||0!=d);){var p=Math.floor((f+d)/2);if(p==h)break;h=p,R(s,c.slice(0,h+1).join(l)+i.ellipsis),n.children().each(function(){v(this).toggle().toggle()}),w(n,i)?(d=h,i.fallbackToLetter&&0==f&&0==d&&(l="",c=c[0].split(l),h=u=-1,f=0,d=c.length-1)):f=u=h}if(-1==u||1==c.length&&0==c[0].length){var g=t.parent();t.detach();var m=o&&o.closest(g).length?o.length:0;if(g.contents().length>m?s=T(g.contents().eq(-1-m),e):(s=T(g,e,!0),m||g.detach()),s&&(r=S(b(s),i),R(s,r),m&&o)){var y=o.parent();v(s).parent().append(o),v.trim(y.html())||y.remove()}}else r=S(c.slice(0,u+1).join(l),i),R(s,r);return!0}(t,i,o,s,r):e(t,i,o,s,r)),a||r&&r.detach()}});i.addClass("is-truncated");return a}(c,o,c,r,n)),c.replaceWith(c.contents()),c=null,v.isFunction(r.callback)&&r.callback.call(o[0],i,s),a.isTruncated=i}).bind("isTruncated.dot",function(t,e){return t.preventDefault(),t.stopPropagation(),"function"==typeof e&&e.call(o[0],a.isTruncated),a.isTruncated}).bind("originalContent.dot",function(t,e){return t.preventDefault(),t.stopPropagation(),"function"==typeof e&&e.call(o[0],s),s}).bind("destroy.dot",function(t){t.preventDefault(),t.stopPropagation(),o.unwatch().unbind_events().contents().detach().end().append(s).attr("style",o.data("dotdotdot-style")||"").removeClass("is-truncated").data("dotdotdot",!1)}),o},o.unbind_events=function(){return o.unbind(".dot"),o},o.watch=function(){if(o.unwatch(),"window"==r.watch){var t=v(window),e=t.width(),n=t.height();t.bind("resize.dot"+a.dotId,function(){e==t.width()&&n==t.height()&&r.windowResizeFix||(e=t.width(),n=t.height(),l&&clearInterval(l),l=setTimeout(function(){o.trigger("update.dot")},100))})}else i=u(o),l=setInterval(function(){if(o.is(":visible")){var t=u(o);i.width==t.width&&i.height==t.height||(o.trigger("update.dot"),i=t)}},500);return o},o.unwatch=function(){return v(window).unbind("resize.dot"+a.dotId),l&&clearInterval(l),o};var r=v.extend(!0,{},v.fn.dotdotdot.defaults,t),a={},i={},l=null,c=null;return r.lastCharacter.remove instanceof Array||(r.lastCharacter.remove=v.fn.dotdotdot.defaultArrays.lastCharacter.remove),r.lastCharacter.noEllipsis instanceof Array||(r.lastCharacter.noEllipsis=v.fn.dotdotdot.defaultArrays.lastCharacter.noEllipsis),a.afterElement=function(t,e){if(!t)return!1;if("string"==typeof t)return!!(t=v(t,e)).length&&t;return!!t.jquery&&t}(r.after,o),a.isTruncated=!1,a.dotId=n++,o.data("dotdotdot",!0).bind_events().trigger("update.dot"),r.watch&&o.watch(),o},v.fn.dotdotdot.defaults={ellipsis:"... ",wrap:"word",fallbackToLetter:!0,lastCharacter:{},tolerance:0,callback:null,after:null,height:null,watch:!1,windowResizeFix:!0},v.fn.dotdotdot.defaultArrays={lastCharacter:{remove:[" ","　",",",";",".","!","?"],noEllipsis:[]}},v.fn.dotdotdot.debug=function(t){};var n=1,i=v.fn.html;v.fn.html=function(t){return t!=e&&!v.isFunction(t)&&this.data("dotdotdot")?this.trigger("update",[t]):i.apply(this,arguments)};var o=v.fn.text;v.fn.text=function(t){return t!=e&&!v.isFunction(t)&&this.data("dotdotdot")?(t=v("<div />").text(t).html(),this.trigger("update",[t])):o.apply(this,arguments)}}function w(t,e){return t.innerHeight()>e.maxHeight}function S(t,e){for(;-1<v.inArray(t.slice(-1),e.lastCharacter.remove);)t=t.slice(0,-1);return v.inArray(t.slice(-1),e.lastCharacter.noEllipsis)<0&&(t+=e.ellipsis),t}function u(t){return{width:t.innerWidth(),height:t.innerHeight()}}function R(t,e){t.innerText?t.innerText=e:t.nodeValue?t.nodeValue=e:t.textContent&&(t.textContent=e)}function b(t){return t.innerText?t.innerText:t.nodeValue?t.nodeValue:t.textContent?t.textContent:""}function s(t){for(;(t=t.previousSibling)&&1!==t.nodeType&&3!==t.nodeType;);return t}function T(t,e,n){var i,o=t&&t[0];if(o){if(!n){if(3===o.nodeType)return o;if(v.trim(t.text()))return T(t.contents().last(),e)}for(i=s(o);!i;){if((t=t.parent()).is(e)||!t.length)return!1;i=s(t[0])}if(i)return T(v(i),e)}return!1}}(jQuery),jQuery(document).ready(function(s){s(".dot-ellipsis").each(function(){var t=s(this).hasClass("dot-resize-update"),e=s(this).hasClass("dot-timer-update"),i=0,n=s(this).attr("class").split(/\s+/);s.each(n,function(t,e){var n=e.match(/^dot-height-(\d+)$/);null!==n&&(i=Number(n[1]))});var o=new Object;e&&(o.watch=!0),t&&(o.watch="window"),0<i&&(o.height=i),s(this).dotdotdot(o)})}),jQuery(window).on("load",function(){jQuery(".dot-ellipsis.dot-load-update").trigger("update.dot")}),function(){function i(t,e,n){return t.call.apply(t.bind,arguments)}function o(e,n,t){if(!e)throw Error();if(2<arguments.length){var i=Array.prototype.slice.call(arguments,2);return function(){var t=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(t,i),e.apply(n,t)}}return function(){return e.apply(n,arguments)}}function p(t,e,n){return(p=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?i:o).apply(null,arguments)}var a=Date.now||function(){return+new Date};function e(t,e){this.a=t,this.o=e||t,this.c=this.o.document}var l=!!window.FontFace;function c(t,e,n,i){if(e=t.c.createElement(e),n)for(var o in n)n.hasOwnProperty(o)&&("style"==o?e.style.cssText=n[o]:e.setAttribute(o,n[o]));return i&&e.appendChild(t.c.createTextNode(i)),e}function u(t,e,n){(t=t.c.getElementsByTagName(e)[0])||(t=document.documentElement),t.insertBefore(n,t.lastChild)}function n(t){t.parentNode&&t.parentNode.removeChild(t)}function g(t,e,n){e=e||[],n=n||[];for(var i=t.className.split(/\s+/),o=0;o<e.length;o+=1){for(var s=!1,r=0;r<i.length;r+=1)if(e[o]===i[r]){s=!0;break}s||i.push(e[o])}for(e=[],o=0;o<i.length;o+=1){for(s=!1,r=0;r<n.length;r+=1)if(i[o]===n[r]){s=!0;break}s||e.push(i[o])}t.className=e.join(" ").replace(/\s+/g," ").replace(/^\s+|\s+$/,"")}function s(t,e){for(var n=t.className.split(/\s+/),i=0,o=n.length;i<o;i++)if(n[i]==e)return!0;return!1}function h(t,e,n){function i(){r&&o&&(r(s),r=null)}e=c(t,"link",{rel:"stylesheet",href:e,media:"all"});var o=!1,s=null,r=n||null;l?(e.onload=function(){o=!0,i()},e.onerror=function(){o=!0,s=Error("Stylesheet failed to load"),i()}):setTimeout(function(){o=!0,i()},0),u(t,"head",e)}function f(t,e,n,i){var o=t.c.getElementsByTagName("head")[0];if(o){var s=c(t,"script",{src:e}),r=!1;return s.onload=s.onreadystatechange=function(){r||this.readyState&&"loaded"!=this.readyState&&"complete"!=this.readyState||(r=!0,n&&n(null),s.onload=s.onreadystatechange=null,"HEAD"==s.parentNode.tagName&&o.removeChild(s))},o.appendChild(s),setTimeout(function(){r||(r=!0,n&&n(Error("Script load timeout")))},i||5e3),s}return null}function d(){this.a=0,this.c=null}function m(t){return t.a++,function(){t.a--,r(t)}}function y(t,e){t.c=e,r(t)}function r(t){0==t.a&&t.c&&(t.c(),t.c=null)}function v(t){this.a=t||"-"}function w(t,e){this.c=t,this.f=4,this.a="n";var n=(e||"n4").match(/^([nio])([1-9])$/i);n&&(this.a=n[1],this.f=parseInt(n[2],10))}function S(t){var e=[];t=t.split(/,\s*/);for(var n=0;n<t.length;n++){var i=t[n].replace(/['"]/g,"");-1!=i.indexOf(" ")||/^\d/.test(i)?e.push("'"+i+"'"):e.push(i)}return e.join(",")}function R(t){return t.a+t.f}function b(t){var e="normal";return"o"===t.a?e="oblique":"i"===t.a&&(e="italic"),e}function T(t,e){this.c=t,this.f=t.o.document.documentElement,this.h=e,this.a=new v("-"),this.j=!1!==e.events,this.g=!1!==e.classes}function C(t){if(t.g){var e=s(t.f,t.a.c("wf","active")),n=[],i=[t.a.c("wf","loading")];e||n.push(t.a.c("wf","inactive")),g(t.f,n,i)}_(t,"inactive")}function _(t,e,n){t.j&&t.h[e]&&(n?t.h[e](n.c,R(n)):t.h[e]())}function x(){this.c={}}function I(t,e){this.c=t,this.f=e,this.a=c(this.c,"span",{"aria-hidden":"true"},this.f)}function E(t){u(t.c,"body",t.a)}function V(t){return"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:"+S(t.c)+";font-style:"+b(t)+";font-weight:"+t.f+"00;"}function k(t,e,n,i,o,s){this.g=t,this.j=e,this.a=i,this.c=n,this.f=o||3e3,this.h=s||void 0}function L(t,e,n,i,o,s,r){this.v=t,this.B=e,this.c=n,this.a=i,this.s=r||"BESbswy",this.f={},this.w=o||3e3,this.u=s||null,this.m=this.j=this.h=this.g=null,this.g=new I(this.c,this.s),this.h=new I(this.c,this.s),this.j=new I(this.c,this.s),this.m=new I(this.c,this.s),t=V(t=new w(this.a.c+",serif",R(this.a))),this.g.a.style.cssText=t,t=V(t=new w(this.a.c+",sans-serif",R(this.a))),this.h.a.style.cssText=t,t=V(t=new w("serif",R(this.a))),this.j.a.style.cssText=t,t=V(t=new w("sans-serif",R(this.a))),this.m.a.style.cssText=t,E(this.g),E(this.h),E(this.j),E(this.m)}v.prototype.c=function(t){for(var e=[],n=0;n<arguments.length;n++)e.push(arguments[n].replace(/[\W_]+/g,"").toLowerCase());return e.join(this.a)},k.prototype.start=function(){var o=this.c.o.document,s=this,r=a(),t=new Promise(function(n,i){!function e(){var t;a()-r>=s.f?i():o.fonts.load((t=s.a,b(t)+" "+t.f+"00 300px "+S(t.c)),s.h).then(function(t){1<=t.length?n():setTimeout(e,25)},function(){i()})}()}),n=null,e=new Promise(function(t,e){n=setTimeout(e,s.f)});Promise.race([e,t]).then(function(){n&&(clearTimeout(n),n=null),s.g(s.a)},function(){s.j(s.a)})};var O={D:"serif",C:"sans-serif"},A=null;function D(){if(null===A){var t=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent);A=!!t&&(parseInt(t[1],10)<536||536===parseInt(t[1],10)&&parseInt(t[2],10)<=11)}return A}function N(t,e,n){for(var i in O)if(O.hasOwnProperty(i)&&e===t.f[O[i]]&&n===t.f[O[i]])return!0;return!1}function P(t){var e,n=t.g.a.offsetWidth,i=t.h.a.offsetWidth;(e=n===t.f.serif&&i===t.f["sans-serif"])||(e=D()&&N(t,n,i)),e?a()-t.A>=t.w?D()&&N(t,n,i)&&(null===t.u||t.u.hasOwnProperty(t.a.c))?j(t,t.v):j(t,t.B):setTimeout(p(function(){P(this)},t),50):j(t,t.v)}function j(t,e){setTimeout(p(function(){n(this.g.a),n(this.h.a),n(this.j.a),n(this.m.a),e(this.a)},t),0)}function H(t,e,n){this.c=t,this.a=e,this.f=0,this.m=this.j=!1,this.s=n}L.prototype.start=function(){this.f.serif=this.j.a.offsetWidth,this.f["sans-serif"]=this.m.a.offsetWidth,this.A=a(),P(this)};var M=null;function z(t){0==--t.f&&t.j&&(t.m?((t=t.a).g&&g(t.f,[t.a.c("wf","active")],[t.a.c("wf","loading"),t.a.c("wf","inactive")]),_(t,"active")):C(t.a))}function t(t){this.j=t,this.a=new x,this.h=0,this.f=this.g=!0}function F(t,e){this.c=t,this.a=e}function $(t,e){this.c=t,this.a=e}function U(t,e){this.c=t||"https://fonts.googleapis.com/css",this.a=[],this.f=[],this.g=e||""}H.prototype.g=function(t){var e=this.a;e.g&&g(e.f,[e.a.c("wf",t.c,R(t).toString(),"active")],[e.a.c("wf",t.c,R(t).toString(),"loading"),e.a.c("wf",t.c,R(t).toString(),"inactive")]),_(e,"fontactive",t),this.m=!0,z(this)},H.prototype.h=function(t){var e=this.a;if(e.g){var n=s(e.f,e.a.c("wf",t.c,R(t).toString(),"active")),i=[],o=[e.a.c("wf",t.c,R(t).toString(),"loading")];n||i.push(e.a.c("wf",t.c,R(t).toString(),"inactive")),g(e.f,i,o)}_(e,"fontinactive",t),z(this)},t.prototype.load=function(t){this.c=new e(this.j,t.context||this.j),this.g=!1!==t.events,this.f=!1!==t.classes,function(o,t,e){var n=[],i=e.timeout;s=t,s.g&&g(s.f,[s.a.c("wf","loading")]),_(s,"loading");var s;var n=function(t,e,n){var i,o=[];for(i in e)if(e.hasOwnProperty(i)){var s=t.c[i];s&&o.push(s(e[i],n))}return o}(o.a,e,o.c),r=new H(o.c,t,i);for(o.h=n.length,t=0,e=n.length;t<e;t++)n[t].load(function(t,e,n){var i,c,u,h,f,d;c=r,u=t,h=e,f=n,d=0==--(i=o).h,(i.f||i.g)&&setTimeout(function(){var t=f||null,e=h||{};if(0===u.length&&d)C(c.a);else{c.f+=u.length,d&&(c.j=d);var n,i=[];for(n=0;n<u.length;n++){var o=u[n],s=e[o.c],r=c.a,a=o;if(r.g&&g(r.f,[r.a.c("wf",a.c,R(a).toString(),"loading")]),_(r,"fontloading",a),(r=null)===M)if(window.FontFace){var a=/Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent),l=/OS X.*Version\/10\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);M=a?42<parseInt(a[1],10):!l}else M=!1;r=M?new k(p(c.g,c),p(c.h,c),c.c,o,c.s,s):new L(p(c.g,c),p(c.h,c),c.c,o,c.s,t,s),i.push(r)}for(n=0;n<i.length;n++)i[n].start()}},0)})}(this,new T(this.c,t),t)},F.prototype.load=function(r){var e=this,a=e.a.projectId,t=e.a.version;if(a){var l=e.c.o;f(this.c,(e.a.api||"https://fast.fonts.net/jsapi")+"/"+a+".js"+(t?"?v="+t:""),function(t){t?r([]):(l["__MonotypeConfiguration__"+a]=function(){return e.a},function t(){if(l["__mti_fntLst"+a]){var e,n=l["__mti_fntLst"+a](),i=[];if(n)for(var o=0;o<n.length;o++){var s=n[o].fontfamily;null!=n[o].fontStyle&&null!=n[o].fontWeight?(e=n[o].fontStyle+n[o].fontWeight,i.push(new w(s,e))):i.push(new w(s))}r(i)}else setTimeout(function(){t()},50)}())}).id="__MonotypeAPIScript__"+a}else r([])},$.prototype.load=function(t){var e,n,i=this.a.urls||[],o=this.a.families||[],s=this.a.testStrings||{},r=new d;for(e=0,n=i.length;e<n;e++)h(this.c,i[e],m(r));var a=[];for(e=0,n=o.length;e<n;e++)if((i=o[e].split(":"))[1])for(var l=i[1].split(","),c=0;c<l.length;c+=1)a.push(new w(i[0],l[c]));else a.push(new w(i[0]));y(r,function(){t(a,s)})};function W(t){this.f=t,this.a=[],this.c={}}var B={latin:"BESbswy","latin-ext":"çöüğş",cyrillic:"йяЖ",greek:"αβΣ",khmer:"កខគ",Hanuman:"កខគ"},q={thin:"1",extralight:"2","extra-light":"2",ultralight:"2","ultra-light":"2",light:"3",regular:"4",book:"4",medium:"5","semi-bold":"6",semibold:"6","demi-bold":"6",demibold:"6",bold:"7","extra-bold":"8",extrabold:"8","ultra-bold":"8",ultrabold:"8",black:"9",heavy:"9",l:"3",r:"4",b:"7"},G={i:"i",italic:"i",n:"n",normal:"n"},J=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;function Q(t,e){this.c=t,this.a=e}var K={Arimo:!0,Cousine:!0,Tinos:!0};function X(t,e){this.c=t,this.a=e}function Y(t,e){this.c=t,this.f=e,this.a=[]}Q.prototype.load=function(t){var e=new d,n=this.c,i=new U(this.a.api,this.a.text),o=this.a.families;!function(t,e){for(var n=e.length,i=0;i<n;i++){var o=e[i].split(":");3==o.length&&t.f.push(o.pop());var s="";2==o.length&&""!=o[1]&&(s=":"),t.a.push(o.join(s))}}(i,o);var s=new W(o);!function(t){for(var e=t.f.length,n=0;n<e;n++){var i=t.f[n].split(":"),o=i[0].replace(/\+/g," "),s=["n4"];if(2<=i.length){var r;if(r=[],a=i[1])for(var a,l=(a=a.split(",")).length,c=0;c<l;c++){var u;if((u=a[c]).match(/^[\w-]+$/))if(null==(f=J.exec(u.toLowerCase())))u="";else{if(u=null==(u=f[2])||""==u?"n":G[u],null==(f=f[1])||""==f)f="4";else var h=q[f],f=h||(isNaN(f)?"4":f.substr(0,1));u=[u,f].join("")}else u="";u&&r.push(u)}0<r.length&&(s=r),3==i.length&&(r=[],0<(i=(i=i[2])?i.split(","):r).length&&(i=B[i[0]])&&(t.c[o]=i))}for(t.c[o]||(i=B[o])&&(t.c[o]=i),i=0;i<s.length;i+=1)t.a.push(new w(o,s[i]))}}(s),h(n,function(t){if(0==t.a.length)throw Error("No fonts to load!");if(-1!=t.c.indexOf("kit="))return t.c;for(var e=t.a.length,n=[],i=0;i<e;i++)n.push(t.a[i].replace(/ /g,"+"));return e=t.c+"?family="+n.join("%7C"),0<t.f.length&&(e+="&subset="+t.f.join(",")),0<t.g.length&&(e+="&text="+encodeURIComponent(t.g)),e}(i),m(e)),y(e,function(){t(s.a,s.c,K)})},X.prototype.load=function(r){var t=this.a.id,a=this.c.o;t?f(this.c,(this.a.api||"https://use.typekit.net")+"/"+t+".js",function(t){if(t)r([]);else if(a.Typekit&&a.Typekit.config&&a.Typekit.config.fn){t=a.Typekit.config.fn;for(var e=[],n=0;n<t.length;n+=2)for(var i=t[n],o=t[n+1],s=0;s<o.length;s++)e.push(new w(i,o[s]));try{a.Typekit.load({events:!1,classes:!1,async:!0})}catch(t){}r(e)}},2e3):r([])},Y.prototype.load=function(c){var t,e=this.f.id,n=this.c.o,u=this;e?(n.__webfontfontdeckmodule__||(n.__webfontfontdeckmodule__={}),n.__webfontfontdeckmodule__[e]=function(t,e){for(var n=0,i=e.fonts.length;n<i;++n){var o=e.fonts[n];u.a.push(new w(o.name,(s="font-weight:"+o.weight+";font-style:"+o.style,l=a=r=void 0,r=4,a="n",l=null,s&&((l=s.match(/(normal|oblique|italic)/i))&&l[1]&&(a=l[1].substr(0,1).toLowerCase()),(l=s.match(/([1-9]00|normal|bold)/i))&&l[1]&&(/bold/i.test(l[1])?r=7:/[1-9]00/.test(l[1])&&(r=parseInt(l[1].substr(0,1),10)))),a+r)))}var s,r,a,l;c(u.a)},f(this.c,(this.f.api||"https://f.fontdeck.com/s/css/js/")+((t=this.c).o.location.hostname||t.a.location.hostname)+"/"+e+".js",function(t){t&&c([])})):c([])};var Z=new t(window);Z.a.c.custom=function(t,e){return new $(e,t)},Z.a.c.fontdeck=function(t,e){return new Y(e,t)},Z.a.c.monotype=function(t,e){return new F(e,t)},Z.a.c.typekit=function(t,e){return new X(e,t)},Z.a.c.google=function(t,e){return new Q(e,t)};var tt={load:p(Z.load,Z)};"function"==typeof define&&define.amd?define(function(){return tt}):"undefined"!=typeof module&&module.exports?module.exports=tt:(window.WebFont=tt,window.WebFontConfig&&Z.load(window.WebFontConfig))}(),function(c,t,e,n){"use strict";var i="autoScroll",o={by:"continuous",speed:"medium",duration:10,pause:5,click:!1,minimumMovement:3};function s(t,e){this.element=t,this.page=c(t).find(".page"),this.options=c.extend({},o,e),this._defaults=o,this._name=i,this.isLoading=!0,this.draggable=null,this.tween=null,this.calculateProgress=null,this.init()}(s.prototype={init:function(){var t,e,n=this,i=null,o=null,s=c(this.element).outerHeight(!0),r=s,a=this.element.scrollHeight-this.element.offsetHeight;function l(){n.tween.pause(),TweenLite.killDelayedCallsTo(n.calculateProgress),TweenLite.killDelayedCallsTo(i),TweenLite.killDelayedCallsTo(o)}this.calculateProgress=function(){r=c(n.element).scrollTop()+s,n.tween.progress(c(n.element).scrollTop()/a).play()},this.canScroll()?("page"===this.options.by?(t="fastest"===this.options.speed?.4:"fast"===this.options.speed?.8:"medium"===this.options.speed?1.2:"slow"===this.options.speed?1.6:2,e=this.page.outerHeight(!0)/c(this.element).outerHeight(!0)*t):(t="fastest"===this.options.speed?60:"fast"===this.options.speed?50:"medium"===this.options.speed?40:"slow"===this.options.speed?30:20,e=Math.abs((this.page.outerHeight(!0)-c(this.element).outerHeight(!0))/t)),Draggable.create(this.element,{type:"scrollTop",throwProps:!0,edgeResistance:.75,minimumMovement:n.options.minimumMovement,onPress:function(){l()},onRelease:function(){"none"!==n.options.by&&TweenLite.delayedCall(n.options.pause,n.calculateProgress)},onClick:function(){n.options.click&&(l(),c(n.element).trigger("scrollClick",[this.pointerEvent]))}}),this.draggable=Draggable.get(this.element),this.tween=TweenLite.to(this.draggable.scrollProxy,e,{scrollTop:a,ease:Linear.easeNone,delay:"page"===this.options.by?this.options.duration:this.options.pause,paused:!0,onUpdate:"page"===this.options.by?function(){Math.abs(n.draggable.scrollProxy.top())>=r&&(n.tween.pause(),r+=s,TweenLite.delayedCall(n.options.duration,o=function(){n.tween.resume()}))}:void 0,onComplete:function(){TweenLite.delayedCall("page"===n.options.by?n.options.duration:n.options.pause,i=function(){TweenLite.to(n.page,1,{autoAlpha:0,onComplete:function(){n.tween.seek(0).pause(),"page"===n.options.by&&(r=s),c(n.element).trigger("done")}})})}}),TweenLite.set(this.element,{overflowY:"hidden"})):this.options.click&&(Draggable.create(this.element,{type:"scrollTop",throwProps:!0,edgeResistance:.95,minimumMovement:this.options.minimumMovement,onClick:function(){c(n.element).trigger("scrollClick",[this.pointerEvent])}}),this.draggable=Draggable.get(this.element))},canScroll:function(){return this.options&&this.page.height()>c(this.element).height()},destroy:function(){c(this.element).removeData(),this.tween&&this.tween.kill(),this.draggable&&this.draggable.kill(),this.element=null,this.page=null,this.options=null,this._defaults=null,this.draggable=null,this.tween=null,this.calculateProgress=null}}).play=function(){this.canScroll()&&"none"!==this.options.by&&this.tween&&(this.isLoading?(this.tween.play(),this.isLoading=!1):(TweenLite.to(this.page,1,{autoAlpha:1}),TweenLite.delayedCall("page"===this.options.by?this.options.duration:this.options.pause,this.calculateProgress)))},s.prototype.pause=function(){this.tween&&(TweenLite.killDelayedCallsTo(this.calculateProgress),this.tween.pause())},s.prototype.stop=function(){this.tween&&(TweenLite.killDelayedCallsTo(this.calculateProgress),this.tween.kill()),this.element=null,this.page=null},c.fn.autoScroll=function(t){return this.each(function(){c.data(this,"plugin_"+i)||c.data(this,"plugin_"+i,new s(this,t))})}}(jQuery,window,document);var RiseVision,WIDGET_COMMON_CONFIG={AUTH_PATH_URL:"v1/widget/auth",LOGGER_CLIENT_ID:"1088527147109-6q1o2vtihn34292pjt4ckhmhck0rk0o7.apps.googleusercontent.com",LOGGER_CLIENT_SECRET:"nlZyrcPLg6oEwO9f9Wfn29Wh",LOGGER_REFRESH_TOKEN:"1/xzt4kwzE1H7W9VnKB8cAaCx6zb4Es4nKEoqaYHdTD15IgOrJDtdun6zK6XiATCKT",STORE_URL:"https://store-dot-rvaserver2.appspot.com/"};(RiseVision=RiseVision||{}).Common=RiseVision.Common||{},RiseVision.Common.Utilities=function(){function c(t,e){return"."+t+" {"+("font-family: "+decodeURIComponent(e.font.family).replace(/'/g,"")+"; ")+("color: "+(e.color?e.color:e.forecolor)+"; ")+("font-size: "+(-1===e.size.indexOf("px")?e.size+"px; ":e.size+"; "))+("font-weight: "+(e.bold?"bold":"normal")+"; ")+("font-style: "+(e.italic?"italic":"normal")+"; ")+("text-decoration: "+(e.underline?"underline":"none")+"; ")+("background-color: "+(e.highlightColor?e.highlightColor:e.backcolor)+";")+"}"}function u(t){for(var e=document.createElement("style"),n=0,i=t.length;n<i;n++)e.appendChild(document.createTextNode(t[n]));document.head.appendChild(e)}function h(t,e,n){var i=null,o="font-family: "+t+"; src: url('"+e+"');";null!==(i=(n=n||document).styleSheets[0])&&i.addRule("@font-face",o)}function f(t,e){WebFont.load({google:{families:t},active:function(){e&&"function"==typeof e&&e()},inactive:function(){e&&"function"==typeof e&&e()},timeout:5e3})}function e(t,e){for(var n,i=e.split("&"),o=0;o<i.length;o++)if((n=i[o].split("="))[0]==t)return decodeURIComponent(n[1]);return""}return{addProtocol:function(t,e){return/^(?:f|ht)tps?\:\/\//.test(t)||(t=(e?"https://":"http://")+t),t},getQueryParameter:function(t){return e(t,window.location.search.substring(1))},getQueryStringParameter:e,getFontCssStyle:c,addCSSRules:u,loadFonts:function(t,e){var n=null,i=[],o=[],s=[];function r(){e&&"function"==typeof e&&e()}if(t&&0!==t.length){t.forEach(function(t){t.class&&t.fontStyle&&u([c(t.class,t.fontStyle)])});for(var a=0;a<t.length;a++)t[a].fontStyle&&t[a].fontStyle.font.type&&"google"===t[a].fontStyle.font.type&&(n=(n=t[a].fontStyle.font.family.split(",")[0]).replace(/'/g,""),i.push(n));for(a=0;a<t.length;a++)t[a].fontStyle&&t[a].fontStyle.font.type&&"custom"===t[a].fontStyle.font.type&&(o.push(decodeURIComponent(t[a].fontStyle.font.family).replace(/'/g,"")),s.push(t[a].fontStyle.font.url.replace(/'/g,"\\'")));if(0===i.length&&0===o.length)r();else{for(var l=0;l<o.length;l+=1)h(o[l],s[l]);0<i.length?f(i,function(){r()}):r()}}else r()},loadCustomFont:h,loadGoogleFonts:f,loadScript:function(t){var e=document.createElement("script");e.src=t,document.body.appendChild(e)},preloadImages:function(t){for(var e=t.length,n=[],i=0;i<e;i++)n[i]=new Image,n[i].src=t[i]},getRiseCacheErrorMessage:function(t){var e="";switch(t){case 404:e="The file does not exist or cannot be accessed.";break;case 507:e="There is not enough disk space to save the file on Rise Cache.";break;default:e="There was a problem retrieving the file from Rise Cache."}return e},unescapeHTML:function(t){var e=document.createElement("div");return e.innerHTML=t,e.textContent},hasInternetConnection:function(t,e){var n=new XMLHttpRequest;if(t&&e&&"function"==typeof e){n.open("HEAD",t+"?cb="+(new Date).getTime(),!1);try{n.send(),e(200<=n.status&&n.status<304)}catch(t){e(!1)}}},isLegacy:function(){var t=navigator.userAgent.match(/Chrome\/(\S+)/),e=t?t[1]:0;return!!(e&&(e=parseInt(e.substring(0,e.indexOf("."))))<=25)},getDateObjectFromPlayerVersionString:function(t){var e=/(\d{4})\.(\d{2})\.(\d{2})\.(\d{2})\.(\d{2})/.exec(t);return e?new Date(+e[1],+e[2]-1,+e[3],+e[4],+e[5]):void 0}}}(),(RiseVision=RiseVision||{}).Common=RiseVision.Common||{},RiseVision.Common.Scroller=function(n){"use strict";var i=null,e=null,o=null,s=null,t=null,r=[],a=0,l=0,c=RiseVision.Common.Utilities,u=32767;function h(){var t;f(),m(),u<a&&(t=new Event("scroller-oversized-canvas"),i.dispatchEvent(t)),o.width=a,f(),m()}function f(){for(var t=a=0;t<r.length;t++)r[t].separator?d(r[t]):p(r[t])}function d(t){var e=o.height/2,n=t.size/2;s.save(),s.fillStyle=t.color,s.beginPath(),s.arc(a+n,e,n,0,2*Math.PI),s.fill(),a+=t.size+10,s.restore()}function p(t){var e,n={};t&&(n.text=c.unescapeHTML(t.text),t.fontStyle&&((e=t.fontStyle).font&&e.font.family&&(n.font=e.font.family),e.size&&(n.size=e.size),e.forecolor&&(n.foreColor=e.forecolor),e.bold&&(n.bold=e.bold),e.italic&&(n.italic=e.italic)),function(t){var e="";s.save(),t.bold&&(e="bold ");t.italic&&(e+="italic ");t.size&&(e+=t.size+" ");t.font&&(e+=t.font);s.font=e,s.fillStyle=t.foreColor,s.textBaseline="middle",s.translate(0,o.height/2),s.fillText(t.text,a,0),a+=s.measureText(t.text).width+10,s.restore()}(n))}function g(){e.clearRect(0,0,i.width,i.height),e.drawImage(o,e.xpos,0)}function m(){var t=0,e=0;if(l=a,0<r.length)for(;t<i.width;)r[e].separator?d(r[e]):p(r[e]),t=a-l,e=e===r.length-1?0:e+1}function y(){t=null,e.xpos=0,i.dispatchEvent(new CustomEvent("done",{bubbles:!0}))}function v(t){var e=t.getContext("2d");return t.width=n.width,t.height=n.height,e.xpos=0,e}return{init:function(t){r=t,i=document.getElementById("scroller"),e=v(i),(o=document.createElement("canvas")).id="secondary",o.style.display="none",s=v(o),document.body.appendChild(o),h(),TweenLite.ticker.addEventListener("tick",g),i.dispatchEvent(new CustomEvent("ready",{bubbles:!0}))},play:function(){t||(t=TweenLite.to(e,function(){var t;if(n.transition&&n.transition.speed)switch(n.transition.speed){case"slow":t=100;break;case"medium":t=150;break;case"fast":t=200;break;default:t=150}return l/t}(),{xpos:-l,ease:Linear.easeNone,onComplete:y})),t.play()},pause:function(){t&&t.pause()},refresh:function(t){r=t,h()}}},(RiseVision=RiseVision||{}).Common=RiseVision.Common||{},RiseVision.Common.LoggerUtils=function(){"use strict";var s="",r="",a=null;function i(){var t=new Date,e=t.getUTCFullYear(),n=t.getUTCMonth()+1,i=t.getUTCDate();return n<10&&(n="0"+n),i<10&&(i="0"+i),""+e+n+i}function l(t){var e;return t&&"string"==typeof t?(e=t.substr(t.lastIndexOf(".")+1),/[?#&]/.test(e)&&(e=(e=(e=e.substr(0,-1!==e.indexOf("?")?e.indexOf("?"):e.length)).substr(0,-1!==e.indexOf("#")?e.indexOf("#"):e.length)).substr(0,-1!==e.indexOf("&")?e.indexOf("&"):e.length)),e.toLowerCase()):null}return{getInsertData:function(t){var e={kind:"bigquery#tableDataInsertAllRequest",skipInvalidRows:!1,ignoreUnknownValues:!1,templateSuffix:i(),rows:[{insertId:""}]},n=JSON.parse(JSON.stringify(e));return n.rows[0].insertId=Math.random().toString(36).substr(2).toUpperCase(),n.rows[0].json=JSON.parse(JSON.stringify(t)),n.rows[0].json.ts=(new Date).toISOString(),n},getFileFormat:l,logEvent:function(e,t){var n,i,o;i=function(t){null!==t&&RiseVision.Common.Logger.log(e,t)},o=null,(n=t).event&&((o=n).file_url&&(o.file_format=l(o.file_url)),o.company_id=r,o.display_id=s,a&&(o.version=a)),i(o)},logEventToPlayer:function(t,e){try{top.postToPlayer({message:"widget-log",table:t,params:JSON.stringify(e),suffix:i()})}catch(t){console.log("widget-common.logEventToPlayer",t)}},setIds:function(t,e){r=t,s=e},setVersion:function(t){a=t}}}(),RiseVision.Common.Logger=function(r){"use strict";var i="https://www.googleapis.com/oauth2/v3/token?client_id="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_ID+"&client_secret="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_SECRET+"&refresh_token="+WIDGET_COMMON_CONFIG.LOGGER_REFRESH_TOKEN+"&grant_type=refresh_token",e=!1,n="",a=0,l="";return{log:function(o,s){var t;if(!(!o||!s||s.hasOwnProperty("event")&&!s.event||s.hasOwnProperty("event")&&(t=s.event,e&&n===t))&&s.display_id&&"preview"!==s.display_id&&"display_id"!==s.display_id&&"displayId"!==s.display_id){try{if(top.postToPlayer&&top.enableWidgetLogging)return r.logEventToPlayer(o,s)}catch(t){console.log("widget-common: logger",t)}return e=!0,n=s.event,setTimeout(function(){e=!1},1e3),function(e){var n=new XMLHttpRequest;if(new Date-a<358e4)return e({});n.open("POST",i,!0),n.onloadend=function(){var t={};try{t=JSON.parse(n.response)}catch(t){console.warn("Can't refresh logger token - ",t.message)}e({token:t.access_token,refreshedAt:new Date})},n.send()}(function(t){var e,n,i=new XMLHttpRequest;n="https://www.googleapis.com/bigquery/v2/projects/client-side-events/datasets/Widget_Events/tables/TABLE_ID/insertAll".replace("TABLE_ID",o),a=t.refreshedAt||a,l=t.token||l,e=r.getInsertData(s),i.open("POST",n,!0),i.setRequestHeader("Content-Type","application/json"),i.setRequestHeader("Authorization","Bearer "+l),s.cb&&"function"==typeof s.cb&&(i.onloadend=function(){s.cb(i.response)}),i.send(JSON.stringify(e))})}}}}(RiseVision.Common.LoggerUtils),(RiseVision=RiseVision||{}).RSS={},RiseVision.RSS=function(i,o){"use strict";var s=null,r=new o.Prefs,a=null,l=null,c=null,e=!0,t=null,u=!1;function h(){o.rpc.call("","rsevent_ready",null,r.getString("id"),!0,!0,!0,!0,!0)}function n(){o.rpc.call("","rsevent_done",null,r.getString("id"))}function f(){R({event:"error",event_details:"no feed items",feed_url:s.url}),T("There are no items to show from this RSS feed.")}function d(){clearTimeout(t),t=null}function p(){d(),t=setTimeout(function(){n()},5e3)}function g(){(a=new RiseVision.Common.Message(i.getElementById("container"),i.getElementById("messageContainer"))).show("Please wait while your feed is loaded.")}function m(t){var e=[{class:"story_font-style",fontStyle:s.story.fontStyle}];s.headline&&!_.isEmpty(s.headline.fontStyle)&&e.push({class:"headline_font-style",fontStyle:s.headline.fontStyle}),s.timestamp&&!_.isEmpty(s.timestamp.fontStyle)&&e.push({class:"timestamp_font-style",fontStyle:s.timestamp.fontStyle}),s.author&&!_.isEmpty(s.author.fontStyle)&&e.push({class:"author_font-style",fontStyle:s.author.fontStyle}),t&&"function"==typeof t?RiseVision.Common.Utilities.loadFonts(e,t):RiseVision.Common.Utilities.loadFonts(e)}function y(){new RiseVision.RSS.RiseRSS(s).init()}function v(){var e=window.location.pathname,t=e.lastIndexOf("/")+1;e=e.substr(0,t)+"layouts/",void 0===s.layout?e+="layout-4x1.html":"custom"===s.layout?e=s.layoutUrl:e+=s.layout+".html",$.get(e).done(function(t){var e;e=t,$("#container").append(e),g(),m(),y(),h()}).fail(function(){var t;t=e,(a=new RiseVision.Common.Message(i.getElementById("container"),i.getElementById("messageContainer"))).show("The layout file could not be loaded."),R({event:"error",event_details:"layout not loaded",error_details:t,feed_url:s.url}),h()})}function w(){return!!s.transition&&("scroll"===s.transition.type&&"left"===s.transition.direction)}function S(){return"rss_events"}function R(t){RiseVision.Common.LoggerUtils.logEvent("rss_events",t)}function b(){e=!0,u?d():l&&l.pause()}function T(t){u=!0,l||(l=new RiseVision.RSS.Content(r,s)),l.reset(),c=null,a.show(t),e||p()}return{getTableName:S,logEvent:R,onContentDone:function(){n()},onRiseRSSInit:function(t){l=new RiseVision.RSS.Content(r,s),t.items&&0<t.items.length?(a.hide(),c=_.clone(t),l.init(c),e||l.play()):f()},onRiseRSSRefresh:function(t){var e,n=!1;if(t.items&&0!==t.items.length)if(c&&t.items.length===c.items.length){for(e=0;e<c.items.length;e+=1)if(!_.isEqual(t.items[e],c.items[e])){n=!0;break}}else n=!0;else f();n&&(c=_.clone(t),u?(l||(l=new RiseVision.RSS.Content(r,s)),a.hide(),l.init(c),u=!1):l.update(t))},pause:b,play:function(){e=!1,u?p():l&&l.play()},setAdditionalParams:function(t){var e,n;s=JSON.parse(JSON.stringify(t)),r=new o.Prefs,s.width=r.getInt("rsW"),s.height=r.getInt("rsH"),i.getElementById("container").style.width=s.width+"px",i.getElementById("container").style.height=s.height+"px",e=w()?"horizontal":s.layout,n={layout:e,layoutUrl:"custom"===e?s.layoutUrl:null},R({event:"configuration",event_details:JSON.stringify(n),feed_url:s.url}),w()?(i.getElementById("scroller").style.display="block",g(),m(function(){y(),h()})):v()},showError:T,stop:function(){b()}}}(document,gadgets),(RiseVision=RiseVision||{}).RSS=RiseVision.RSS||{},RiseVision.RSS.Utils=function(){"use strict";return{stripScripts:function(t){var e,n,i=document.createElement("div");for(i.innerHTML=t,n=(e=i.getElementsByTagName("script")).length;n--;)e[n].parentNode.removeChild(e[n]);return i.innerHTML},truncate:function(t,e){var n=e||120;return t.length>n&&(t=(t=t.substring(0,n)).replace(/\w+$/,""),t+=" ..."),t}}}(),(RiseVision=RiseVision||{}).RSS=RiseVision.RSS||{},RiseVision.RSS.Images={},RiseVision.RSS.Images=function(){"use strict";var i=[],n=0,o=[],s=null;function r(t){o.push(t),(n+=1)===i.length&&s&&"function"==typeof s&&s()}return{getImages:function(){return o},load:function(t,e){0<t.length?(i=t,o=[],n=0,e&&(s=e),function(){var t,e,n;for(t=0;t<i.length;t+=1)null===i[t]?r(null):(e=i[t],n=void 0,(n=new Image).onload=function(){r(this)},n.onerror=function(){r(this)},n.src=e)}()):e&&"function"==typeof e&&e()}}}(),(RiseVision=RiseVision||{}).RSS=RiseVision.RSS||{},RiseVision.RSS.RiseRSS=function(i){"use strict";var e=!0;return{init:function(){var t=document.querySelector("rise-rss");t.addEventListener("rise-rss-response",function(t){t.detail&&t.detail.feed&&(e?(e=!1,RiseVision.RSS.onRiseRSSInit(t.detail.feed)):RiseVision.RSS.onRiseRSSRefresh(t.detail.feed))}),t.addEventListener("rise-rss-error",function(t){var e="",n={event:"error",feed_url:i.url};t.detail&&"string"==typeof t.detail?e=t.detail:t.detail&&Array.isArray(t.detail)&&0<t.detail.length&&(e=t.detail[0]),n.error_details=e,n.event_details="rise rss error","401 unauthorized"===e.toLowerCase()?(n.event_details="feed authentication error",RiseVision.RSS.showError("The feed at the URL provided cannot be shown because it is protected and requires authentication.")):"404 not found"===e.toLowerCase()?(n.event_details="feed not found",RiseVision.RSS.showError("The feed URL <span class='error-link'>"+i.url+"</span> could not be found.")):"not a feed"===e.toLowerCase()?RiseVision.RSS.showError("The URL provided is not an RSS feed."):RiseVision.RSS.showError("Sorry, there was a problem with the RSS feed."),RiseVision.RSS.logEvent(n)}),t.setAttribute("url",i.url),i.itemsInQueue&&t.setAttribute("entries",i.itemsInQueue),t.go()}}},(RiseVision=RiseVision||{}).RSS=RiseVision.RSS||{},RiseVision.RSS.TransitionNoScroll=function(r,a){"use strict";var l=[],c=0,e=null,u=!1,i=!1;function h(){var t={};return l.length<=r.itemsToShow?(t.itemsToShow=l.length,t.currentItemIndex=l.length-1):(t.itemsToShow=r.itemsToShow,t.currentItemIndex=r.itemsToShow-1),t}function n(t){$(".page").empty(),t&&"function"==typeof t&&t()}function f(t){"fade"===r.transition.type?($(".item").one("webkitTransitionEnd transitionend",function(){n(t)}),$(".item").addClass("fade-out").removeClass("fade-in")):n(t)}function d(t){a.showItem(t),"fade"===r.transition.type&&$(".item").addClass("fade-in"),$(".item").removeClass("hide")}function o(){var t,e,n,i,o=h(),s=(i={},(n=c)+r.itemsToShow>=l.length-1?(i.itemsToShow=l.length-(n+1),i.currentItemIndex=l.length-1):(i.itemsToShow=r.itemsToShow,i.currentItemIndex=n+r.itemsToShow),i);if(c===l.length-1)return p(),f(function(){for(e=0;e<o.itemsToShow;e+=1)d(e);c=o.currentItemIndex,RiseVision.RSS.onContentDone()}),void(u=!1);u?(u=!1,a.loadImages(function(){f(function(){for(e=0;e<o.itemsToShow;e+=1)d(e);c=o.currentItemIndex})})):(t=c+1,c=s.currentItemIndex,f(function(){for(e=t;e<t+s.itemsToShow;e+=1)d(e)}))}function p(){clearInterval(e),e=null}function s(){var t;0<l.length?(t=1<=r.transition.duration/1e3?r.transition.duration:1e3*r.transition.duration,null===e&&(e=setInterval(function(){o()},t))):i=!0}return{init:function(t){var e,n;for(l=t,e=h(),c=e.currentItemIndex,n=0;n<e.itemsToShow;n+=1)d(n);i&&(i=!1,s())},reset:function(){f(),u=i=!1,l=[]},start:s,stop:function(){i=!1,p()},update:function(t){l=t,u=!0}}},(RiseVision=RiseVision||{}).RSS=RiseVision.RSS||{},RiseVision.RSS.TransitionVerticalScroll=function(n,e){"use strict";var i=[],o=!1,s=!1,r=null;function t(){$(".page").empty()}function a(){var t=$("#container");return void 0!==t.data("plugin_autoScroll")?t.data("plugin_autoScroll"):null}function l(){var t=a();t&&($("#container").autoScroll().off("done",u),t.destroy(),$(".page").css("visibility","inherit"),$(".page").css("opacity","1"))}function c(){var t;for(t=0;t<i.length;t+=1)e.showItem(t);$(".item").removeClass("hide")}function u(){o?(o=!1,l(),e.loadImages(function(){t(),c(),h(),RiseVision.RSS.onContentDone()})):RiseVision.RSS.onContentDone()}function h(){$("#container").autoScroll({by:"scroll"===n.transition.type?"continuous":"page",speed:n.transition.speed,duration:n.transition.duration,pause:n.transition.resume}).on("done",u)}function f(){var t,e=a();0<i.length?e&&e.canScroll()?e.play():(t=void 0===n.transition.pud||n.transition.pud<1?1e4:1e3*n.transition.pud,r||(r=setTimeout(function(){r=null,u()},t))):s=!0}return{init:function(t){i=t,c(),h(),s&&(s=!1,f())},reset:function(){l(),t(),s=!1,i=[]},start:f,stop:function(){var t=a();s=!1,t&&t.canScroll()&&t.pause(),r&&(clearTimeout(r),r=null)},update:function(t){i=t,o=!0}}},(RiseVision=RiseVision||{}).RSS=RiseVision.RSS||{},RiseVision.RSS.HorizontalScroll=function(l,c){"use strict";var u=[],e=!1,n=!1,t=!1,i=null;function o(){var t,e="",n="",i="",o="",s=null,r=[],a=l.separator&&l.separator.show;for(t=0;t<u.length;t++)e=c.getTitle(u[t]),n=c.getAuthor(u[t]),i=c.getDate(u[t]),o=c.getStory(u[t]),e&&(void 0===l.dataSelection.showTitle||l.dataSelection.showTitle)&&((s={}).text=e,s.fontStyle=l.headline.fontStyle,r.push(s)),n&&(void 0===l.dataSelection.showAuthor||l.dataSelection.showAuthor)&&((s={}).text=n,s.fontStyle=l.author.fontStyle,r.push(s)),i&&(void 0===l.dataSelection.showTimestamp||l.dataSelection.showTimestamp)&&((s={}).text=i,s.fontStyle=l.timestamp.fontStyle,r.push(s)),o&&((s={}).text=o,s.fontStyle=l.story.fontStyle,r.push(s)),a&&((s={separator:!0}).size=l.separator.size,s.color=l.separator.color,r.push(s));return r}function s(){t=!0,a()}function r(){e&&(e=!1,i.refresh(o())),RiseVision.RSS.onContentDone()}function a(){i&&t&&0<u.length?i.play():n=!0}return{init:function(t){var e;document.getElementById("container").style.display="none",u=t,e=document.querySelector("#scroller"),i=new RiseVision.Common.Scroller(l),e.addEventListener("scroller-oversized-canvas",function(){RiseVision.RSS.logEvent({event:"error",event_details:"canvas width is over the max size",feed_url:l.url})}),e.addEventListener("ready",s),e.addEventListener("done",r),i.init(o()),n&&(n=!1,a())},reset:function(){n=!1,u=[]},start:a,stop:function(){n=!1,i&&i.pause()},update:function(t){u=t,e=!0}}},(RiseVision=RiseVision||{}).RSS=RiseVision.RSS||{},RiseVision.RSS.Content=function(t,f){"use strict";var d=[],n=RiseVision.RSS.Utils,p=RiseVision.RSS.Images,e=null,i=["image/bmp","image/gif","image/jpeg","image/jpg","image/png","image/tiff"];function g(){var t=d.length<=f.itemsToShow?d.length:f.itemsToShow;return f.separator&&f.separator.show?f.height/t-f.separator.size:f.height/t}function m(t){var e=null;return _.has(t,"enclosures")&&t.enclosures[0]&&_.contains(i,t.enclosures[0].type)?e=t.enclosures[0].url:t.image&&t.image.url&&(e=t.image.url),e}function y(){$(".item").each(function(){var t=$(this).find(".image"),e=null;t&&(e=function(t,e){var n,i,o,s=null,r=parseInt(t.css("margin-left"),10)+parseInt(t.css("margin-right"),10),a=parseInt(t.css("margin-top"),10)+parseInt(t.css("margin-bottom"),10);switch(f.layout){case"layout-4x1":(s={}).width=.33*f.width,s.height=f.height/f.itemsToShow-a;break;case"layout-2x1":s={},0===$(e).find(".story").length?s.width=f.width-r:s.width=.5*f.width,s.height=f.height/f.itemsToShow-$(e).find(".textWrapper").outerHeight(!0)-a;break;case"layout-16x9":(s={}).width=f.width-r,s.height=f.height/f.itemsToShow-a;break;case"layout-1x2":(s={}).width=f.width-r,s.height=(f.height/f.itemsToShow-a)/2;break;case"layout-photo":case"layout-photo_dark":s={},t.width()<t.height()?(s.width=t.width(),s.height=t.height()):(s.width=f.width-r,s.height=f.height/f.itemsToShow-a)}return s&&(o=(n=s.width/parseInt(t.width()))<(i=s.height/parseInt(t.height()))?n:i,s.width=parseInt(parseInt(t.width())*o),s.height=parseInt(parseInt(t.height())*o)),s}(t,this))&&(t.width(e.width),t.height(e.height))})}function o(t){var e,n,i,o,s,r,a,l,c,u,h;$(".page").append((e=d[t],n=t,o=R(e),s=S(e),r=v(e),a=m(e),l=w(e),c=document.querySelector("#layout").content,u=$(c.cloneNode(!0)),h=!1,!e.title||void 0!==f.dataSelection.showTitle&&!f.dataSelection.showTitle?u.find(".headline").remove():(u.find(".headline").css("textAlign",f.headline.fontStyle.align),u.find(".headline a").html(o).text()),!l||void 0!==f.dataSelection.showTimestamp&&!f.dataSelection.showTimestamp?(h=!0,u.find(".timestamp").remove()):(f.timestamp&&u.find(".timestamp").css("textAlign",f.timestamp.fontStyle.align),u.find(".timestamp").text(l)),!r||void 0!==f.dataSelection.showAuthor&&!f.dataSelection.showAuthor?(h=!0,u.find(".author").remove()):(f.author&&u.find(".author").css("textAlign",f.author.fontStyle.align),u.find(".author").text(r)),h&&u.find(".separator").remove(),!a||void 0!==f.dataSelection.showImage&&!f.dataSelection.showImage?u.find(".image").remove():p.getImages()[n]&&u.find(".image").attr("src",a),s?((i=u.find(".story")).css("textAlign",f.story.fontStyle.align),i.html(s),i.find("p").addClass("story_font-style"),i.find("div").addClass("story_font-style"),i.find("span").addClass("story_font-style")):u.remove(".story"),$(document.importNode(u[0],!0)))),y(),f.separator&&f.separator.show&&$(".item").css("border-bottom","solid "+f.separator.size+"px "+f.separator.color),!0===function(){switch(f.layout){case"layout-photo":case"layout-photo_dark":case"layout-poster":return!1;default:return!0}}()&&($(".item").height(g()),"layout-16x9"!==f.layout&&$(".item").dotdotdot({height:g()}))}function v(t){var e=null;return t.author?e=t.author:_.has(t,"dc:creator")&&(e=t["dc:creator"]["#"]),e}function w(t){var e,n=t.date,i=null;return n&&(e={year:"numeric",month:"long",day:"numeric"},i=(n=new Date(n)).toLocaleDateString("en-us",e)),i}function S(t){var e=null;return _.has(t,"description")&&("full"===f.dataSelection.showDescription?e=n.stripScripts(t.description):"snippet"===f.dataSelection.showDescription&&0<f.dataSelection.snippetLength&&(e=n.truncate($("<div/>").html(n.stripScripts(t.description)).text(),f.dataSelection.snippetLength))),e}function R(t){var e=null;return t.title&&(e=n.stripScripts(t.title)),e}function s(t){p.load(function(){var t,e=[];for(t=0;t<d.length;t+=1)e.push(m(d[t]));return e}(),function(){t&&"function"==typeof t&&t()})}return{init:function(t){d=t.items,e||(f.transition||(f.transition={type:"none",duration:10,direction:"up"}),"none"===f.transition.type||"fade"===f.transition.type?e=new RiseVision.RSS.TransitionNoScroll(f,this):"scroll"===f.transition.type?"up"===f.transition.direction?e=new RiseVision.RSS.TransitionVerticalScroll(f,this):"left"===f.transition.direction&&(e=new RiseVision.RSS.HorizontalScroll(f,this)):"page"===f.transition.type&&(e=new RiseVision.RSS.TransitionVerticalScroll(f,this))),s(function(){e.init(d)})},getAuthor:v,getDate:w,getStory:S,getTitle:R,loadImages:s,pause:function(){e&&e.stop()},play:function(){e&&e.start()},reset:function(){e&&(e.stop(),e.reset()),d=[]},showItem:function(t){o(t)},update:function(t){d=t.items,e&&e.update(d)}}},(RiseVision=RiseVision||{}).Common=RiseVision.Common||{},RiseVision.Common.Message=function(i,o){"use strict";var s=!1;return function(){try{o.style.height=i.style.height}catch(t){console.warn("Can't initialize Message - ",t.message)}}(),{hide:function(){if(s){for(;o.firstChild;)o.removeChild(o.firstChild);o.style.display="none",i.style.display="block",s=!1}},show:function(t){var e,n=document.createDocumentFragment();s?(e=o.querySelector(".message")).innerHTML=t:(i.style.display="none",o.style.display="block",(e=document.createElement("p")).innerHTML=t,e.setAttribute("class","message"),n.appendChild(e),o.appendChild(n),s=!0)}}},function(t,e,n){"use strict";var i=(new n.Prefs).getString("id");t.oncontextmenu=function(){return!1},e.body.onmousedown=function(){return!1},i&&""!==i&&(n.rpc.register("rscmd_play_"+i,function(){RiseVision.RSS.play()}),n.rpc.register("rscmd_pause_"+i,function(){RiseVision.RSS.pause()}),n.rpc.register("rscmd_stop_"+i,function(){RiseVision.RSS.stop()}),n.rpc.register("rsparam_set_"+i,function(t,e){var n,i="",o="";Array.isArray(t)&&0<t.length&&Array.isArray(e)&&0<e.length&&("companyId"===t[0]&&(i=e[0]),"displayId"===t[1]&&(o=e[1]?e[1]:"preview"),RiseVision.Common.LoggerUtils.setIds(i,o),"additionalParams"===t[2]&&(n=JSON.parse(e[2]),RiseVision.RSS.setAdditionalParams(n)))}),n.rpc.call("","rsparam_get",null,i,["companyId","displayId","additionalParams"]))}(window,document,gadgets);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
